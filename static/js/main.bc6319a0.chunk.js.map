{"version":3,"sources":["components/LoginPage/LoginSectionOne/logo.png","components/LoginPage/LoginSectionOne/index.js","apis/reqres.js","actions/index.js","components/LoginPage/LoginSectionTwo/index.js","components/LoginPage/index.js","components/widgets/StaticDatePicker.js","components/widgets/TaskCard.js","components/Dashboard/index.js","components/widgets/ScreenHeader.js","components/widgets/SnackBar.js","components/CreateTask/index.js","components/EditTask/index.js","components/Analytics/index.js","components/SideBar/index.js","components/App/index.js","reducers/index.js","reducers/loginReducer.js","reducers/taskReducer.js","index.js"],"names":["LoginSectionOne","className","src","logo","alt","axios","create","baseURL","logout","type","LoginSectionTwo","props","passwordRef","React","createRef","passwordTypeRef","handleEyeClick","currentType","current","handleChangeEmail","event","setState","email","target","value","emailRef","classList","remove","handleChangePassword","password","handleSubmit","preventDefault","state","login","add","onSubmit","this","ref","placeholder","onChange","onClick","Component","connect","dispatch","getstate","a","reqres","post","response","payload","token","data","LoginPage","StaticDatePicker","defaultMaterialTheme","createMuiTheme","palette","primary","green","overrides","MuiPickersToolbar","toolbar","MuiPickersToolbarText","toolbarBtnSelected","color","toolbarTxt","ThemeProvider","theme","keyboardPicker","autoOk","variant","inputVariant","format","taskDate","InputAdornmentProps","position","setTaskDate","DatePicker","label","orientation","TaskCard","task","useState","Date","history","useHistory","utils","DateFnsUtils","id","style","paddingLeft","push","class","console","log","tasks","map","taskName","ScreenHeader","fontSize","cursor","screenName","Alert","elevation","useStyles","makeStyles","root","width","marginTop","spacing","CustomizedSnackbar","classes","isOpenSnackbar","open","setOpen","handleClose","reason","disableError","Snackbar","autoHideDuration","onClose","isError","severity","createTask","description","tag","taskType","date","subTask","setTaskName","taskDescription","setTaskDescription","taskTag","setTaskTag","taskTypeCheck","setTaskTypeCheck","setTaskType","subTaskText","isComplete","subTasks","setsubTask","setIsOpenSnackbar","errorSnackBar","setErrorSnackBar","undefined","e","backgroundColor","resize","rows","Checkbox","checked","renderSubTasks","i","display","alignContent","alignItems","justifyContent","size","subTaskItemCHeck","subTaskItemChange","filter","sbtask","SubTaskList","margin","App","renderMainPage","path","exact","component","CreateTask","EditTask","Analytics","combineReducers","action","persistConfig","key","storage","persistedReducer","persistReducer","reducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bc6319a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.24a3167d.png\";","import React from 'react-dom';\nimport './LoginSectionOne.scss';\nimport logo from './logo.png';\nconst LoginSectionOne = () => {\n    return (\n        <div className=\"section-1\">\n            <div className=\"logo-container\" >\n                <img  src={logo} alt=\"Logo\" />\n                <p><strong>switch</strong>on</p>\n            </div>\n            <h3>Assignments</h3>\n        </div>\n    );\n}\n\nexport default LoginSectionOne;","import axios from 'axios';\n\nexport default axios.create({\nbaseURL:'https://reqres.in/api'\n});","import reqres from '../apis/reqres'\n\nexport const login = (email) => async (dispatch, getstate) => {\n    const response = await reqres.post('/login', { email: \"eve.holt@reqres.in\", password: \"cityslicka\" });\n    dispatch({\n        type: 'USER_LOGIN',\n        payload: {\n            token: response.data,\n            email : email\n        }\n    });\n}\n\n\nexport const logout = () => {\n    return {\n        type: 'USER_LOGOUT',\n    }\n}\n\n\nexport const createTask = (taskName, description, tag, taskType, date, subTask) => {\n    return {\n        type: 'CREATE_TASK',\n        payload: {\n            taskName,\n            description,\n            tag,\n            taskType,\n            date,\n            subTask: subTask\n        }\n    }\n}","import React from 'react';\nimport './LoginSectionTwo.scss';\n\nimport { connect } from 'react-redux';\nimport { login } from '../../../actions';\nclass LoginSectionTwo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.emailRef = React.createRef();\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    passwordRef = React.createRef();\n    passwordTypeRef = React.createRef();\n\n    handleEyeClick = () =>{\n        var currentType = this.passwordTypeRef.current.type;\n        if(currentType==='password'){\n            this.passwordTypeRef.current.type='text'\n        }\n        else{\n            this.passwordTypeRef.current.type = 'password'\n        }\n        \n    }\n    handleChangeEmail = (event) => {\n        this.setState({ email: event.target.value });\n        this.emailRef.current.classList.remove('error');\n\n    }\n    handleChangePassword = (event) => {\n        this.setState({ password: event.target.value });\n        this.passwordRef.current.classList.remove('error');\n\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.email !== '' && this.state.password !== '') {\n            this.props.login(this.state.email);\n        }\n        else {\n            if (this.state.email === '') {\n                this.emailRef.current.classList.add('error');\n            }\n\n            if (this.state.password === '') {\n                this.passwordRef.current.classList.add('error');\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"section-2\">\n                <div className=\"login-container\">\n                    <h1>To-Do App</h1>\n                    <form className=\"ui form\" onSubmit={this.handleSubmit}>\n                        <div ref={this.emailRef} className=\"ui field left icon input\">\n                            <input type=\"email\" \n                                value={this.state.email} \n                                placeholder={\"Email ID\"} \n                                onChange={this.handleChangeEmail} />\n                            <i className=\"envelope outline icon\"></i>\n                        </div>\n                        <div ref={this.passwordRef} className=\"ui field left icon input\">\n                            <input ref={this.passwordTypeRef} \n                                type=\"password\" \n                                value={this.state.password} \n                                placeholder={\"Password\"} \n                                onChange={this.handleChangePassword} />\n                            <i className=\"lock icon\"></i>\n                            <div onClick={this.handleEyeClick} className=\"ui icon input\">\n                                <i className=\"eye link icon\"></i>\n                            </div>\n                        </div>\n                        <button className=\"ui field green button\" type=\"submit\" value=\"Submit\" > Login</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default connect(null, { login })(LoginSectionTwo);","import React from 'react';\nimport './LoginPage.scss';\nimport LoginSectionOne from './LoginSectionOne';\nimport LoginSectionTwo from './LoginSectionTwo';\nclass LoginPage extends React.Component {\n\n    render() {\n        return (\n            <div className=\"LoginPage\">\n                <div className=\"container\">\n                    <LoginSectionOne />\n                    <LoginSectionTwo/>\n                </div>\n            </div>\n        );\n    }\n}\nexport default LoginPage;","import React, { Fragment } from \"react\";\nimport { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport green from \"@material-ui/core/colors/green\";\n\nfunction StaticDatePicker(props) {\n  // const [selectedDate, handleDateChange] = useState(new Date());\n  const defaultMaterialTheme = createMuiTheme({\n    palette: {\n      primary: green,\n    },\n    overrides: {\n      MuiPickersToolbar: {\n        toolbar: {\n          // backgroundColor: green[900],\n        },\n      },\n      MuiPickersToolbarText: {\n        toolbarBtnSelected: {\n          color: \"#FFFF\"\n        },\n        toolbarTxt: {\n          color: \"#FFFF\"\n        }\n      }\n    },\n  });\n\n  return (\n    <Fragment>\n      <ThemeProvider theme={defaultMaterialTheme}>\n        {props.keyboardPicker === true ? <KeyboardDatePicker\n          autoOk\n          variant=\"inline\"\n          inputVariant=\"outlined\"\n          format=\"dd-MM-yyyy\"\n          value={props.taskDate}\n          InputAdornmentProps={{ position: \"start\" }}\n          onChange={props.setTaskDate}\n        /> : <DatePicker\n            label=\"Select Date\"\n            autoOk\n            variant=\"inline\"\n            format=\"dd-MM-yyyy\"\n            value={props.taskDate}\n            onChange={props.setTaskDate}\n            orientation=\"landscape\"\n          />}\n\n\n      </ThemeProvider>\n\n    </Fragment>\n  );\n}\n\nexport default StaticDatePicker;\n","import React from 'react';\n\nconst TaskCard = ({task}) => {\n    return(\n        <div>\n            TaskCard {task}\n        </div>\n    );\n}\n\nexport default TaskCard;","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logout } from '../../actions';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nimport '../Dashboard/Dashboard.scss';\nimport StaticDatePicker from '../widgets/StaticDatePicker';\nimport TaskCard from '../widgets/TaskCard'\n\nconst DashBoard = (props) => {\n    const [taskDate, setTaskDate] = useState(new Date());\n\n    let history = useHistory();\n    const handleCreateTaskButton = () => {\n        history.push('/createtask');\n    }\n    const handleEditTaskButton = () => {\n        history.push('/edittask');\n    }\n    const handleAnalyticskButton = () => {\n        history.push('/analytics');\n    }\n\n    const handleLogout = () => {\n        console.log('handle logout');\n        props.logout();\n    }\n    const renderTaskLists = () => {\n        console.log(\"props.task\", props.state.tasks);\n        return props.state.tasks.map((task) => {\n            console.log(task);\n            return (\n                <TaskCard task={task.taskName} />\n            );\n        })\n\n    }\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n            <div className=\"dashboard\">\n                <div className=\"ui hidden divider\"></div>\n\n                <div className=\"top-row\">\n                    <div id=\"search-bar\" className=\"ui icon input search\">\n                        <input style={{ paddingLeft: \"1rem\" }} className=\"prompt\" type=\"text\" placeholder=\"Search Tasks...\" />\n                        <i className=\"search icon\"></i>\n                    </div>\n\n                    <div>\n                        <button onClick={handleCreateTaskButton} class=\"positive ui button\">New Task</button>\n                    </div>\n                    <div>\n                        <StaticDatePicker keyboardPicker={true} taskDate={taskDate} setTaskDate={setTaskDate} />\n                    </div>\n                </div>\n                {renderTaskLists()}\n\n            </div>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\nexport default connect(mapStateToProps, { logout })(DashBoard);","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nconst ScreenHeader = (props) => {\n    let history = useHistory();\n\n    return (\n        <div>\n            <div className=\"ui hidden divider\"></div>\n            <h2 className=\"ui header\">\n                <i onClick={()=>{history.push('/')}} className=\"arrow left icon\" style={{fontSize:\"1.5rem\",cursor:\"pointer\"}}></i>\n                <div className=\"content\">{props.screenName}</div>\n            </h2>\n            <div className=\"ui hidden divider\"></div>\n\n            <div className=\"ui divider\"></div>\n        </div>\n    );\n}\n\nexport default ScreenHeader;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbar(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(props.isOpenSnackbar);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.disableError();\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      \n      <Snackbar open={open} autoHideDuration={1000} onClose={handleClose}>\n       \n      {!props.isError ?  <Alert onClose={handleClose} severity=\"success\">Task Added!</Alert> \n          : <Alert onClose={handleClose} severity=\"error\">Task name is mandatory!</Alert> \n        }\n\n       \n        {/* <Alert onClose={handleClose} severity=\"success\">\n          This is a success message!\n        </Alert> */}\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './CreateTask.scss'\nimport { createTask } from '../../actions/index'\nimport ScreenHeader from '../widgets/ScreenHeader';\nimport StaticDatePicker from '../widgets/StaticDatePicker'\nimport SnackBar from '../widgets/SnackBar'\nimport LoginPage from '../LoginPage'\n\nconst CreateTask = (props) => {\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskTag, setTaskTag] = useState('To-do');\n    const [taskTypeCheck, setTaskTypeCheck] = useState([true, false, false]);\n    const [taskType, setTaskType] = useState('Personal');\n    const [taskDate, setTaskDate] = useState(new Date());\n    const [subTasks, setsubTask] = useState([{subTaskText:'',isComplete:false}]);\n    const [isOpenSnackbar, setIsOpenSnackbar] = useState(false);\n    const [errorSnackBar, setErrorSnackBar] = useState(false);\n\n    const disableError = () =>{\n        setErrorSnackBar(false);\n    }\n    const handleCreateTask = () => {\n        if(taskName===''){\n            console.log(\"task name is mandatory\");\n            // alert(\"mandotory text\")\n            setErrorSnackBar(true);\n        }\n        else{\n        props.createTask(taskName, taskDescription, taskTag, taskType, taskDate, \n            subTasks.filter(sbtask => sbtask.subTaskText!== ''));\n            setTaskName('');\n            setTaskDescription('');\n            setTaskTag('To-do');\n            setTaskTypeCheck([true, false, false]);\n            setTaskType('Personal');\n            setTaskDate(new Date());\n            setsubTask([{subTaskText:'',isComplete:false}]);\n            setIsOpenSnackbar(true);\n\n        }\n        // console.log(\"name\", taskName);\n        // console.log(\"desc\", taskDescription);\n        // console.log(\"tag\", taskTag);\n        // console.log(\"task type \", taskType);\n        // console.log(\"task taskDate \", taskDate);\n        // console.log(\"subtask array\",subTasks);\n    }\n    const subTaskItemChange=(i,e) =>{\n        let tasks = [...subTasks];\n        tasks[i] = {...tasks[i],subTaskText:e.target.value};\n        setsubTask (tasks);\n    }\n    const subTaskItemCHeck=(i) =>{\n        let tasks = [...subTasks];\n        tasks[i] = {...tasks[i],isComplete:!tasks[i].isComplete};\n        setsubTask (tasks);\n    }\n    const SubTaskList = () => {\n        const renderSubTasks = subTasks.map((subTask,i) => { \n            console.log(i);\n            return (\n                <div key={i}\n                style={{ display: \"flex\", width: \"100%\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\n                <Checkbox\n                    // label='My checkbox'\n                    // labelStyle={{ color: 'green' }}\n                    // iconStyle={{ fill: 'green' }}\n                    // inputStyle={{ color: 'green' }}\n                    size={\"medium\"}\n                    checked={subTask.isComplete}\n                    onChange={()=>subTaskItemCHeck(i)}\n                    style={{ color: 'green' }} />\n\n                <div style={{ marginTop: \"1rem\" }} className=\"ui ten wide input field\">\n                    <input  value={subTask.subTaskText||''} onChange={(e)=>subTaskItemChange(i,e)} type=\"text\" placeholder={`Sub Task ${i+1}`} />\n                </div>\n                {/* trash button onclick function contains afilter that filters the subtask of which delete is pressed and filters it out */}\n                <i style={{cursor:\"pointer\"}} onClick={()=>{setsubTask(subTasks.filter(sbtask => sbtask!== subTask))}} \n                    className=\"trash large icon grey\"></i>\n            </div>\n            \n                ); \n        });\n    \n        return (\n            <div className=\"section-two\">\n                {renderSubTasks}\n                <div onClick={() => setsubTask([...subTasks,{subTaskText:\"\",isComplete:false}])}\n                     style={{ color: \"#2185d0\", fontSize: \"1.4rem\", cursor: \"pointer\" }}>\n                     <i className=\"plus icon blue\"> </i>\n                            Add new sub task\n                        </div>    \n            </div>\n        );\n    \n    }\n    // const handleTaskNameCHange = (event) =>{\n    //     setTaskName(event.target.value);\n    //     console.log('task name',taskName);\n    // }\n\n    if (props.state.login.token === undefined) {\n        return <LoginPage />;\n    }\n    else {\n        return (\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    \n                <div className=\"create-task\">\n                    <ScreenHeader screenName=\"Create Task\" />\n                    {/* <div className=\"ui input\">\n                    <input style={{ backgroundColor: \"#f2f2f2\" }} type=\"text\" placeholder=\"Task name\" />\n                </div> */}\n                    <div id=\"form\"className=\"ui form\">\n                        <div className=\"section-one\">\n                            <div className=\"ten wide field\">\n                                <label style={{ color: \"#a6a6a6\" }}>Enter Task Name</label>\n                                <input onChange={e => {setTaskName(e.target.value);setIsOpenSnackbar(false)}}\n                                    value={taskName}\n                                    style={{ backgroundColor: \"#f2f2f2\", fontSize: \"1.2rem\" }}\n                                    type=\"text\" placeholder=\"Task Name\" />\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"ten wide field\">\n                                <label style={{ color: \"#a6a6a6\" }}>Task Description</label>\n                                <textarea \n                                    value={taskDescription}\n                                    onChange={e => setTaskDescription(e.target.value)}\n                                    style={{ backgroundColor: \"#f2f2f2\", resize: \"none\", fontSize: \"1rem\" }}\n                                    rows=\"2\" type=\"text\" placeholder=\"Task Description\" />\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"ui basic buttons\">\n                                <button onClick={() => setTaskTag(\"To-do\")} \n                                    className={taskTag !== \"To-do\" ? \"ui button\" : \"ui button active\"}>\n                                    To-Do\n                                </button>\n                                <button onClick={() => setTaskTag(\"In-Progress\")} className={taskTag !== \"In-Progress\" ? \"ui button\" : \"ui button active\"}>In-Progress</button>\n                                <button onClick={() => setTaskTag(\"Done\")} className={taskTag !== \"Done\" ? \"ui button\" : \"ui button active\"}>Done</button>\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"checkbox-container\">\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[0]}\n                                        onClick={() => { setTaskTypeCheck([true, false, false]); setTaskType(\"Personal\") }}\n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Personal</div>\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[1]}\n                                        onClick={() => { setTaskTypeCheck([false, true, false]); setTaskType(\"Official\") }}\n    \n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Official\n                        </div>\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[2]}\n                                        onClick={() => { setTaskTypeCheck([false, false, true]); setTaskType(\"Miscellaneous\") }}\n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Miscellaneous\n                        </div>\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <StaticDatePicker taskDate={taskDate} setTaskDate={setTaskDate}\n                            // onDateChanged={()=>{console.log(\"date changed\");}}\n                            />\n                            <div className=\"ui hidden divider\"></div>\n                        </div>\n                        {SubTaskList()}\n    \n                    </div>\n                    <div className=\"ui hidden divider\"></div>\n                    <div className=\"buttons-container\">\n                        <button style={{ margin: \"1rem\" }} className=\"ui button\">Cancel</button>\n                        <button onClick={handleCreateTask} className=\"ui green button\">Create</button>\n                    </div>\n                    {/* <SnackBar setIsOpenSnackbar={setIsOpenSnackbar}/> */}\n                    {isOpenSnackbar ? <SnackBar disableError={disableError} isError={false} isOpenSnackbar={isOpenSnackbar} /> : null}\n                    {errorSnackBar ? <SnackBar disableError={disableError} isError={true} isOpenSnackbar={errorSnackBar} /> : null}\n                </div>\n            </MuiPickersUtilsProvider>\n        );\n    }\n    \n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps, { createTask })(CreateTask);","import React from 'react';\nimport { connect } from 'react-redux';\nimport './EditTask.scss'\nimport ScreenHeader from '../widgets/ScreenHeader'\nimport LoginPage from '../LoginPage'\n\nconst EditTask = (props) => {\n    const handleEditTask = () => {\n        console.log('editTask');\n    }\n\n\n    if (props.state.login.token === undefined) {\n        return <LoginPage />;\n    }\n    else {\n\n    return (\n        <div className=\"edit-task\">\n            <ScreenHeader screenName=\"Edit Task\"/>\n            <button onClick={handleEditTask}> edit task</button>\n        </div>\n    );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps)(EditTask);","import React from 'react';\nimport { connect } from 'react-redux';\nimport './Analytics.scss'\n\nimport ScreenHeader from '../widgets/ScreenHeader'\n\nconst Analytics = (props) => {\n    \n    return (\n        <div className=\"analytics\">\n            <ScreenHeader screenName=\"Analytics\" />\n            <h3> Analytics IS SHOWN ============1</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            \n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps)(Analytics);","import React from 'react';\nimport '../SideBar/SideBar.scss'\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { logout } from '../../actions';\n\n\nconst SideBar = (props) =>{\n    let history = useHistory();\n\n    const handleLogout = () =>{\n        history.push('/');\n        props.logout()\n    }\n    \n    return(\n    <div className=\"side-bar\">\n        <div className=\"side-bar-content\">\n            <div>item</div>\n            <div>item</div>\n            <div onClick={handleLogout}>item</div>\n        \n        </div>\n    </div>\n);\n} \n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\nexport default connect(mapStateToProps, { logout })(SideBar);","import React from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux'\nimport { HashRouter, Route } from 'react-router-dom'\n\nimport LoginPage from '../LoginPage';\nimport DashBoard from '../Dashboard';\nimport CreateTask from '../CreateTask';\nimport EditTask from '../EditTask';\nimport Analytics from '../Analytics';\nimport SideBar from '../SideBar'\n\nclass App extends React.Component {\n\n    renderMainPage = () => {\n        if (this.props.state.login.token === undefined) {\n            return <LoginPage />;\n        }\n        else {\n            return <DashBoard />;\n        }\n    }\n\n    render() {\n        return (\n            <HashRouter>\n                <div className=\"App\">\n                {this.props.state.login.token !== undefined && <SideBar/>}\n                <Route path=\"/\" exact component={this.renderMainPage} />\n                <Route path=\"/createtask\" exact component={CreateTask} />\n                <Route path=\"/edittask\" exact component={EditTask} />\n                <Route path=\"/analytics\" exact component={Analytics} />\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps)(App);","import {combineReducers} from 'redux';\n\nimport loginReducer from './loginReducer';\nimport taskReducer from './taskReducer';\n\nexport default combineReducers({\n    login: loginReducer,\n    tasks:taskReducer\n});","/* eslint-disable import/no-anonymous-default-export */\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case 'USER_LOGIN':\n            return action.payload;\n         case 'USER_LOGOUT':\n            return {};\n        default:\n            return state;\n    }\n};","// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = [], action) => {\n    switch (action.type) {\n        case 'CREATE_TASK':\n            return [...state, action.payload];\n\n        case 'USER_LOGOUT':\n            return [];\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport { Provider } from 'react-redux';\nimport { createStore,applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist' // imports from redux-persist\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport reducers from './reducers'\n\nconst persistConfig = { // configuration object for redux-persist\n    key: 'root',\n    storage, // define which storage to use\n}\nconst persistedReducer = persistReducer(persistConfig, reducers) // create a persisted reducer\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(persistedReducer,\n    composeEnhancers(applyMiddleware(thunk))\n    );\n\nconst  persistor = persistStore(store); // used to create the persisted store, persistor will be used in the next step\n\nReactDOM.render(\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n    <App />\n\n    </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}