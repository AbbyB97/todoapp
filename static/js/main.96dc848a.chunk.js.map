{"version":3,"sources":["components/LoginPage/LoginSectionOne/logo.png","components/LoginPage/LoginSectionOne/index.js","apis/reqres.js","actions/index.js","components/LoginPage/LoginSectionTwo/index.js","components/LoginPage/index.js","components/widgets/StaticDatePicker.js","components/widgets/TaskCard.js","components/Dashboard/index.js","components/widgets/ScreenHeader.js","components/widgets/SnackBar.js","components/CreateTask/index.js","components/EditTask/index.js","components/Analytics/index.js","components/SideBar/index.js","components/App/index.js","reducers/index.js","reducers/loginReducer.js","reducers/taskReducer.js","reducers/taskTypesReducer.js","index.js"],"names":["LoginSectionOne","className","src","logo","alt","axios","create","baseURL","logout","type","updateTaskList","tasks","payload","LoginSectionTwo","props","passwordRef","React","createRef","passwordTypeRef","handleEyeClick","currentType","current","handleChangeEmail","event","setState","email","target","value","emailRef","classList","remove","handleChangePassword","password","handleSubmit","preventDefault","state","login","add","onSubmit","this","ref","placeholder","onChange","onClick","Component","connect","dispatch","getstate","a","reqres","post","response","token","data","LoginPage","StaticDatePicker","defaultMaterialTheme","createMuiTheme","palette","primary","green","overrides","MuiPickersToolbar","toolbar","MuiPickersToolbarText","toolbarBtnSelected","color","toolbarTxt","ThemeProvider","theme","keyboardPicker","autoOk","variant","inputVariant","format","taskDate","InputAdornmentProps","position","setTaskDate","DatePicker","label","orientation","subTask","history","useHistory","useState","anchorEl","setAnchorEl","handleClose","operation","task","console","log","dTask","newState","filter","mtask","handleDeleteTask","push","pathname","editableTask","CardMenu","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","style","backgroundColor","margin","borderRadius","marginLeft","display","justifyContent","marginTop","padding","taskType","aria-controls","aria-haspopup","currentTarget","cursor","class","flexDirection","marginBottom","taskName","description","map","subT","i","alignItems","Checkbox","size","checked","isComplete","subTasks","newSubTasks","sTask","updatedMainTasks","mainTask","checkpressed","subTaskText","showTaskType","Date","handleCreateTaskButton","renderTaskLists","tag","includes","utils","DateFnsUtils","paddingLeft","find","width","border","textAlign","borderTopRightRadius","borderTopLeftRadius","length","height","ScreenHeader","fontSize","screenName","Alert","elevation","useStyles","makeStyles","root","spacing","CustomizedSnackbar","classes","isOpenSnackbar","setOpen","reason","disableError","Snackbar","autoHideDuration","isError","severity","errorMessage","createTask","date","setTaskName","taskDescription","setTaskDescription","taskTag","setTaskTag","taskTypeCheck","setTaskTypeCheck","setTaskType","setsubTask","setIsOpenSnackbar","errorSnackBar","setErrorSnackBar","setErrorMessage","undefined","e","resize","rows","renderSubTasks","alignContent","trim","subTaskItemCHeck","subTaskItemChange","sbtask","SubTaskList","useEffect","location","mTask","toDoCount","_","countBy","inProgressCount","doneCount","chartData","labels","datasets","hoverBackgroundColor","true","options","title","text","legend","usePointStyle","maintainAspectRatio","typesArray","substring","indexOf","background","App","renderMainPage","path","exact","component","CreateTask","EditTask","Analytics","combineReducers","action","persistConfig","key","storage","persistedReducer","persistReducer","reducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.96dc848a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.24a3167d.png\";","import React from 'react-dom';\nimport './LoginSectionOne.scss';\nimport logo from './logo.png';\nconst LoginSectionOne = () => {\n    return (\n        <div className=\"section-1\">\n            <div className=\"logo-container\" >\n                <img  src={logo} alt=\"Logo\" />\n                <p><strong>switch</strong>on</p>\n            </div>\n            <h3>Assignments</h3>\n        </div>\n    );\n}\n\nexport default LoginSectionOne;","import axios from 'axios';\n\nexport default axios.create({\nbaseURL:'https://reqres.in/api'\n});","import reqres from '../apis/reqres'\n\nexport const login = (email) => async (dispatch, getstate) => {\n    const response = await reqres.post('/login', { email: \"eve.holt@reqres.in\", password: \"cityslicka\" });\n    dispatch({\n        type: 'USER_LOGIN',\n        payload: {\n            token: response.data,\n            email : email\n        }\n    });\n}\n\n\nexport const logout = () => {\n    return {\n        type: 'USER_LOGOUT',\n    }\n}\n\nexport const updateTaskList = (tasks) => {\n    return {\n        type: 'UPDATE_TASKS',\n        payload: tasks\n    }\n}\n\nexport const showTaskType = (typesArray) => {\n    return {\n        type: 'UPDATE_SHOW_LIST',\n        payload: typesArray\n    }\n}\n\n\nexport const createTask = (taskName, description, tag, taskType, date, subTask) => {\n    return {\n        type: 'CREATE_TASK',\n        payload: {\n            taskName,\n            description,\n            tag,\n            taskType,\n            date,\n            subTask: subTask\n        }\n    }\n}","import React from 'react';\nimport './LoginSectionTwo.scss';\n\nimport { connect } from 'react-redux';\nimport { login } from '../../../actions';\nclass LoginSectionTwo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.emailRef = React.createRef();\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    passwordRef = React.createRef();\n    passwordTypeRef = React.createRef();\n\n    handleEyeClick = () =>{\n        var currentType = this.passwordTypeRef.current.type;\n        if(currentType==='password'){\n            this.passwordTypeRef.current.type='text'\n        }\n        else{\n            this.passwordTypeRef.current.type = 'password'\n        }\n        \n    }\n    handleChangeEmail = (event) => {\n        this.setState({ email: event.target.value });\n        this.emailRef.current.classList.remove('error');\n\n    }\n    handleChangePassword = (event) => {\n        this.setState({ password: event.target.value });\n        this.passwordRef.current.classList.remove('error');\n\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.email !== '' && this.state.password !== '') {\n            this.props.login(this.state.email);\n        }\n        else {\n            if (this.state.email === '') {\n                this.emailRef.current.classList.add('error');\n            }\n\n            if (this.state.password === '') {\n                this.passwordRef.current.classList.add('error');\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"section-2\">\n                <div className=\"login-container\">\n                    <h1>To-Do App</h1>\n                    <form className=\"ui form\" onSubmit={this.handleSubmit}>\n                        <div ref={this.emailRef} className=\"ui field left icon input\">\n                            <input type=\"email\" \n                                value={this.state.email} \n                                placeholder={\"Email ID\"} \n                                onChange={this.handleChangeEmail} />\n                            <i className=\"envelope outline icon\"></i>\n                        </div>\n                        <div ref={this.passwordRef} className=\"ui field left icon input\">\n                            <input ref={this.passwordTypeRef} \n                                type=\"password\" \n                                value={this.state.password} \n                                placeholder={\"Password\"} \n                                onChange={this.handleChangePassword} />\n                            <i className=\"lock icon\"></i>\n                            <div onClick={this.handleEyeClick} className=\"ui icon input\">\n                                <i className=\"eye link icon\"></i>\n                            </div>\n                        </div>\n                        <button className=\"ui field green button\" type=\"submit\" value=\"Submit\" > Login</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default connect(null, { login })(LoginSectionTwo);","import React from 'react';\nimport './LoginPage.scss';\nimport LoginSectionOne from './LoginSectionOne';\nimport LoginSectionTwo from './LoginSectionTwo';\nclass LoginPage extends React.Component {\n\n    render() {\n        return (\n            <div className=\"LoginPage\">\n                <div className=\"container\">\n                    <LoginSectionOne />\n                    <LoginSectionTwo/>\n                </div>\n            </div>\n        );\n    }\n}\nexport default LoginPage;","import React, { Fragment } from \"react\";\nimport { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport green from \"@material-ui/core/colors/green\";\n\nfunction StaticDatePicker(props) {\n  // const [selectedDate, handleDateChange] = useState(new Date());\n  const defaultMaterialTheme = createMuiTheme({\n    palette: {\n      primary: green,\n    },\n    overrides: {\n      MuiPickersToolbar: {\n        toolbar: {\n          // backgroundColor: green[900],\n        },\n      },\n      MuiPickersToolbarText: {\n        toolbarBtnSelected: {\n          color: \"#FFFF\"\n        },\n        toolbarTxt: {\n          color: \"#FFFF\"\n        }\n      }\n    },\n  });\n\n  return (\n    <Fragment>\n      <ThemeProvider theme={defaultMaterialTheme}>\n        {props.keyboardPicker === true ? <KeyboardDatePicker\n          autoOk\n          variant=\"inline\"\n          inputVariant=\"outlined\"\n          format=\"dd-MM-yyyy\"\n          value={props.taskDate}\n          InputAdornmentProps={{ position: \"start\" }}\n          onChange={props.setTaskDate}\n        /> : <DatePicker\n            label=\"Select Date\"\n            autoOk\n            variant=\"inline\"\n            format=\"dd-MM-yyyy\"\n            value={props.taskDate}\n            onChange={props.setTaskDate}\n            orientation=\"landscape\"\n          />}\n\n\n      </ThemeProvider>\n\n    </Fragment>\n  );\n}\n\nexport default StaticDatePicker;\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {updateTaskList} from '../../actions/index';\n\nconst TaskCard = ( props ) => {\n    let history = useHistory();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const cardOptionsClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleDeleteTask=(dTask)=>{\n        console.log(\"deleting task ->\",dTask);\n        var newState = props.state.tasks.filter((mtask)=> mtask!==dTask)\n        console.log(\"og state\",props.state.tasks);\n        console.log(\"new state\",newState);\n        props.updateTaskList(newState);\n    }\n\n    const handleClose = (operation,{task}) => {\n        setAnchorEl(null);\n        console.log('clicked', operation , '===',task);\n        if(operation==='Delete'){\n            handleDeleteTask(task);\n        }\n        else{\n            console.log(\"edittask\");\n            history.push({\n                pathname: '/edittask',\n                editableTask: task\n              })\n        }\n    };\n\n    const CardMenu = (task) => {\n        return (\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={() => handleClose('Edit',task)}>Edit</MenuItem>\n                <MenuItem onClick={() => handleClose('Delete',task)}>Delete</MenuItem>\n            </Menu>\n        );\n    }\n    const checkpressed = (subTasks,subTask) =>{\n        console.log(\"check pressed -\");\n        console.log(\"==== checked subt\",subTasks);\n        // var newSubT = {...subT, isComplete:!subT.isComplete};\n        var newSubTasks = subTasks.map((sTask)=> sTask===subTask ? {...subTask,isComplete : !subTask.isComplete} : sTask)\n        console.log(\"==== checked newsubt\",newSubTasks);\n        console.log(\"===task \",props.task);\n        console.log(\"===========og state \",props.state.tasks);\n        var updatedMainTasks = props.state.tasks.map((mainTask) => mainTask=== props.task ? {...mainTask,subTask:newSubTasks}  : mainTask)\n        console.log(\"===========new state \",updatedMainTasks);\n        props.updateTaskList(updatedMainTasks);\n    }\n\n    const renderSubtask = (subTask) => {\n        return subTask.map((subT,i) => {\n\n            return (\n                <div style={{display:\"flex\",alignItems:\"center\"}}> <Checkbox\n                // label='My checkbox'\n                // labelStyle={{ color: 'green' }}\n                // iconStyle={{ fill: 'green' }}\n                // inputStyle={{ color: 'green' }}\n                size={\"medium\"}\n                checked={subT.isComplete}\n                // onChange={()=>subTaskItemCHeck(i)}\n                onClick = {()=>{checkpressed(subTask,subT)}}\n                style={{ color: 'green' }} />\n                <p>{subT.subTaskText}</p>\n                </div>\n            )\n        })\n    }\n    return (\n        <div style={{backgroundColor:\"#ffffff\", margin:\"1rem\",borderRadius:\"0.25rem\"}}>\n            <div style={{ marginLeft:\"0.5rem\", display: \"flex\", justifyContent: \"space-between\" }}>\n                <div style={{backgroundColor:\"#21ba45\",marginTop:\"0.5rem\",borderRadius:\"0.25rem\"}}>\n                    <p style={{padding:\".25rem\",margin:\".15rem\",color:\"white\"}}>{props.task.taskType}</p>\n                </div>\n                <i aria-controls=\"simple-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={cardOptionsClick}\n                    style={{ cursor: \"pointer\",marginTop:\"0.5rem\" }}\n                    class=\"ellipsis vertical grey icon\" />\n                <CardMenu task={props.task}/>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <h4 style={{ marginLeft:\"0.5rem\",marginBottom: \"0rem\" }}>{props.task.taskName}</h4>\n                {props.task.description ? <p style={{marginLeft:\"0.5rem\",marginBottom:\"0\", color: \"gray\" }}>{props.task.description}</p> : null}\n                {props.task.subTask ? renderSubtask(props.task.subTask) : null}\n\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        state\n    }\n}\n\nexport default connect(mapStateToProps,{updateTaskList})(TaskCard);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logout } from '../../actions';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport {find} from 'lodash';\n\nimport '../Dashboard/Dashboard.scss';\nimport StaticDatePicker from '../widgets/StaticDatePicker';\nimport TaskCard from '../widgets/TaskCard'\n\nconst DashBoard = (props) => {\n    console.log('show type  -- - -',props.state.showTaskType);\n\n    const [taskDate, setTaskDate] = useState(new Date());\n    // const [Show, setShow] = useState(['Personal','Official','Miscellaneous']);\n\n    let history = useHistory();\n    const handleCreateTaskButton = () => {\n        history.push('/createtask');\n    }\n    const handleEditTaskButton = () => {\n        history.push('/edittask');\n    }\n    const handleAnalyticskButton = () => {\n        history.push('/analytics');\n    }\n\n    const handleLogout = () => {\n        console.log('handle logout');\n        props.logout();\n    }\n    const renderTaskLists = (tag) => {\n        console.log('show type  -- - -',props.state.showTaskType);\n        var tagtasks= props.state.tasks.filter(task=>task.tag ===tag && props.state.showTaskType.includes(task.taskType))\n\n        return tagtasks.map((task,i) => {\n            return (\n                <TaskCard key={i} task={task} />\n            );\n        })\n\n    }\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <div className=\"dashboard\">\n                <div className=\"ui hidden divider\"></div>\n\n                <div className=\"top-row\">\n                    <div id=\"search-bar\" className=\"ui icon input search\">\n                        <input style={{ paddingLeft: \"1rem\" }} className=\"prompt\" type=\"text\" placeholder=\"Search Tasks...\" />\n                        <i className=\"search icon\"></i>\n                    </div>\n\n                    <div>\n                        <button onClick={handleCreateTaskButton} class=\"positive ui button\">New Task</button>\n                    </div>\n                    <div>\n                        <StaticDatePicker keyboardPicker={true} taskDate={taskDate} setTaskDate={setTaskDate} />\n                    </div>\n                </div>\n                <div className=\"tasks-container\">\n                { find(props.state.tasks,(task)=>{return task.tag===\"To-do\" && props.state.showTaskType.includes(task.taskType)})? \n                 <div style={{backgroundColor:\"#f8f8f9\",width:\"300px\",border:\"red\"}}>\n                 <div style={{textAlign:\"center\",backgroundColor:\"#f2c94c\",borderTopRightRadius:\"0.5rem\",borderTopLeftRadius:\"0.5rem\"}}>\n                     <h3 style={{padding:\"0.27rem\",color:\"white\"}}>To do</h3>\n             </div>\n             {renderTaskLists(\"To-do\")}\n             </div>\n                : null}\n               \n               { find(props.state.tasks,(task)=>{return task.tag===\"In-Progress\" && props.state.showTaskType.includes(task.taskType)})? \n                <div style={{backgroundColor:\"#f8f8f9\",width:\"300px\",border:\"red\"}}>\n                    <div style={{textAlign:\"center\",backgroundColor:\"#21ba45\",borderTopRightRadius:\"0.5rem\",borderTopLeftRadius:\"0.5rem\"}}>\n                        <h3 style={{padding:\"0.27rem\",color:\"white\"}}>In-progress</h3>\n                </div>\n                {renderTaskLists(\"In-Progress\")}\n                </div>\n                : null}\n               { find(props.state.tasks,(task)=>{return task.tag===\"Done\" && props.state.showTaskType.includes(task.taskType)})? \n                <div style={{backgroundColor:\"#f8f8f9\",width:\"300px\",border:\"red\"}}>\n                    <div style={{textAlign:\"center\",backgroundColor:\"#2f80ed\",borderTopRightRadius:\"0.5rem\",borderTopLeftRadius:\"0.5rem\"}}>\n                        <h3 style={{padding:\"0.27rem\",color:\"white\"}}>Done</h3>\n                </div>\n                {renderTaskLists(\"Done\")}\n                </div>\n                : null}\n\n                </div> \n            {props.state.tasks.length===0?\n            // <div style={{marginTop:\"5rem\",textAlign:\"center\",backgroundColor:\"red\"}}> <h2>Please add some tasks!</h2></div>\n            <div style={{textAlign:\"center\",height:\"5rem\",backgroundColor:\"#2f80ed\",cursor:\"pointer\",\n                    borderTopRightRadius:\"0.5rem\",borderRadius:\"0.5rem\",width:\"18rem\",margin:\"auto\",marginTop:\"5vh\"}}\n                 onClick={handleCreateTaskButton}\n                    >\n                <h3 style={{padding:\"1.5rem\",color:\"white\"}}>Please add Some tasks!</h3>\n                </div>\n            :\n            null\n            }\n            \n\n            </div>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\nexport default connect(mapStateToProps, { logout })(DashBoard);","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nconst ScreenHeader = (props) => {\n    let history = useHistory();\n\n    return (\n        <div style={{marginTop:\"1rem\"}}>\n            <h2 className=\"ui header\">\n                <i onClick={()=>{history.push('/')}} className=\"arrow left icon\" style={{fontSize:\"1.5rem\",cursor:\"pointer\"}}></i>\n                <div className=\"content\">{props.screenName}</div>\n            </h2>\n            <div className=\"ui hidden divider\"></div>\n\n            <div className=\"ui divider\"></div>\n        </div>\n    );\n}\n\nexport default ScreenHeader;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbar(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(props.isOpenSnackbar);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.disableError();\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      \n      <Snackbar open={open} autoHideDuration={1500} onClose={handleClose}>\n       \n      {!props.isError ?  <Alert onClose={handleClose} severity=\"success\">Task Added!</Alert> \n          : <Alert onClose={handleClose} severity=\"error\">{props.errorMessage}</Alert> \n        }\n\n       \n        {/* <Alert onClose={handleClose} severity=\"success\">\n          This is a success message!\n        </Alert> */}\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {useHistory} from 'react-router-dom'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './CreateTask.scss'\nimport { createTask } from '../../actions/index'\nimport ScreenHeader from '../widgets/ScreenHeader';\nimport StaticDatePicker from '../widgets/StaticDatePicker'\nimport SnackBar from '../widgets/SnackBar'\nimport LoginPage from '../LoginPage'\n\nconst CreateTask = (props) => {\n    let history = useHistory();\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskTag, setTaskTag] = useState('To-do');\n    const [taskTypeCheck, setTaskTypeCheck] = useState([true, false, false]);\n    const [taskType, setTaskType] = useState('Personal');\n    const [taskDate, setTaskDate] = useState(new Date());\n    const [subTasks, setsubTask] = useState([{subTaskText:'',isComplete:false}]);\n    const [isOpenSnackbar, setIsOpenSnackbar] = useState(false);\n    const [errorSnackBar, setErrorSnackBar] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const disableError = () =>{\n        setErrorSnackBar(false);\n    }\n    const handleCreateTask = () => {\n        if(taskName.trim().length===0){\n            // alert(\"mandotory text\")\n            setErrorMessage(\"Task name is mandatory\")\n            setErrorSnackBar(true);\n        }\n        else{\n        props.createTask(taskName, taskDescription, taskTag, taskType, taskDate, \n            subTasks.filter(sbtask => sbtask.subTaskText!== ''));\n            setTaskName('');\n            setTaskDescription('');\n            setTaskTag('To-do');\n            setTaskTypeCheck([true, false, false]);\n            setTaskType('Personal');\n            setTaskDate(new Date());\n            setsubTask([{subTaskText:'',isComplete:false}]);\n            setIsOpenSnackbar(true);\n\n        }\n        // console.log(\"name\", taskName);\n        // console.log(\"desc\", taskDescription);\n        // console.log(\"tag\", taskTag);\n        // console.log(\"task type \", taskType);\n        // console.log(\"task taskDate \", taskDate);\n        // console.log(\"subtask array\",subTasks);\n    }\n    const subTaskItemChange=(i,e) =>{\n        let tasks = [...subTasks];\n        tasks[i] = {...tasks[i],subTaskText:e.target.value};\n        setsubTask (tasks);\n    }\n    const subTaskItemCHeck=(i) =>{\n        let tasks = [...subTasks];\n        console.log('task',tasks[i]);\n        if(tasks[i].subTaskText.trim().length === 0 && tasks[i].isComplete===false){\n            console.log(\"empty check\");\n            setErrorMessage(\"Enter sub task before checking it as complete\");\n\n            setErrorSnackBar(true);\n        }\n        else{\n        tasks[i] = {...tasks[i],isComplete:!tasks[i].isComplete};\n        setsubTask (tasks);}\n    }\n    const SubTaskList = () => {\n        const renderSubTasks = subTasks.map((subTask,i) => { \n            console.log(i);\n            return (\n                <div key={i}\n                style={{ display: \"flex\", width: \"100%\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\n                <Checkbox\n                    // label='My checkbox'\n                    // labelStyle={{ color: 'green' }}\n                    // iconStyle={{ fill: 'green' }}\n                    // inputStyle={{ color: 'green' }}\n                    size={\"medium\"}\n                    checked={subTask.isComplete}\n                    onChange={()=>subTaskItemCHeck(i)}\n                    style={{ color: 'green' }} />\n\n                <div style={{ marginTop: \"1rem\" }} className=\"ui ten wide input field\">\n                    <input  value={subTask.subTaskText||''} onChange={(e)=>subTaskItemChange(i,e)} type=\"text\" placeholder={`Sub Task ${i+1}`} />\n                </div>\n                {/* trash button onclick function contains afilter that filters the subtask of which delete is pressed and filters it out */}\n                <i style={{cursor:\"pointer\"}} onClick={()=>{setsubTask(subTasks.filter(sbtask => sbtask!== subTask))}} \n                    className=\"trash large icon grey\"></i>\n            </div>\n            \n                ); \n        });\n    \n        return (\n            <div className=\"section-two\">\n                {renderSubTasks}\n                <div onClick={() => setsubTask([...subTasks,{subTaskText:\"\",isComplete:false}])}\n                     style={{ color: \"#2185d0\", fontSize: \"1.2rem\", cursor: \"pointer\" }}>\n                     <i style={{marginTop:\"1rem\"}} className=\"plus icon blue\"> </i>\n                            Add new sub task\n                        </div>    \n            </div>\n        );\n    \n    }\n    // const handleTaskNameCHange = (event) =>{\n    //     setTaskName(event.target.value);\n    //     console.log('task name',taskName);\n    // }\n\n    if (props.state.login.token === undefined) {\n        return (<LoginPage >\n                {history.push('/')}\n                </LoginPage>\n            );\n    }\n    else {\n        return (\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    \n                <div className=\"create-task\">\n                    <ScreenHeader screenName=\"Create Task\" />\n                    {/* <div className=\"ui input\">\n                    <input style={{ backgroundColor: \"#f2f2f2\" }} type=\"text\" placeholder=\"Task name\" />\n                </div> */}\n                    <div id=\"form\"className=\"ui form\">\n                        <div className=\"section-one\">\n                            <div className=\"ten wide field\">\n                                <label style={{ color: \"#a6a6a6\" }}>Enter Task Name</label>\n                                <input onChange={e => {setTaskName(e.target.value);setIsOpenSnackbar(false)}}\n                                    value={taskName}\n                                    style={{ backgroundColor: \"#f2f2f2\", fontSize: \"1.2rem\" }}\n                                    type=\"text\" placeholder=\"Task Name\" />\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"ten wide field\">\n                                <label style={{ color: \"#a6a6a6\" }}>Task Description</label>\n                                <textarea \n                                    value={taskDescription}\n                                    onChange={e => setTaskDescription(e.target.value)}\n                                    style={{ backgroundColor: \"#f2f2f2\", resize: \"none\", fontSize: \"1rem\" }}\n                                    rows=\"2\" type=\"text\" placeholder=\"Task Description\" />\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"ui basic buttons\">\n                                <button onClick={() => setTaskTag(\"To-do\")} \n                                    className={taskTag !== \"To-do\" ? \"ui button\" : \"ui button active\"}>\n                                    To-Do\n                                </button>\n                                <button onClick={() => setTaskTag(\"In-Progress\")} className={taskTag !== \"In-Progress\" ? \"ui button\" : \"ui button active\"}>In-Progress</button>\n                                <button onClick={() => setTaskTag(\"Done\")} className={taskTag !== \"Done\" ? \"ui button\" : \"ui button active\"}>Done</button>\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"checkbox-container\">\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[0]}\n                                        onClick={() => { setTaskTypeCheck([true, false, false]); setTaskType(\"Personal\") }}\n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Personal</div>\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[1]}\n                                        onClick={() => { setTaskTypeCheck([false, true, false]); setTaskType(\"Official\") }}\n    \n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Official\n                        </div>\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[2]}\n                                        onClick={() => { setTaskTypeCheck([false, false, true]); setTaskType(\"Miscellaneous\") }}\n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Miscellaneous\n                        </div>\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <StaticDatePicker taskDate={taskDate} setTaskDate={setTaskDate}\n                            // onDateChanged={()=>{console.log(\"date changed\");}}\n                            />\n                            <div className=\"ui hidden divider\"></div>\n                        </div>\n                        {SubTaskList()}\n    \n                    </div>\n                    <div className=\"ui hidden divider\"></div>\n                    <div className=\"buttons-container\">\n                        <button style={{ margin: \"1rem\" }} className=\"ui button\">Cancel</button>\n                        <button onClick={handleCreateTask} className=\"ui green button\">Create</button>\n                    </div>\n                    {/* <SnackBar setIsOpenSnackbar={setIsOpenSnackbar}/> */}\n                    {isOpenSnackbar ? <SnackBar disableError={disableError} isError={false} isOpenSnackbar={isOpenSnackbar} /> : null}\n                    {errorSnackBar ? <SnackBar disableError={disableError} errorMessage={errorMessage} isError={true} isOpenSnackbar={errorSnackBar} /> : null}\n                </div>\n            </MuiPickersUtilsProvider>\n        );\n    }\n    \n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps, { createTask })(CreateTask);","import React,{useState,useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {updateTaskList} from '../../actions/index';\n\n\nimport './EditTask.scss'\nimport ScreenHeader from '../widgets/ScreenHeader'\nimport LoginPage from '../LoginPage'\nimport Dashboard from '../Dashboard'\nimport StaticDatePicker from '../widgets/StaticDatePicker'\nimport SnackBar from '../widgets/SnackBar'\n\nconst EditTask = (props) => {\n    let history = useHistory()\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskTag, setTaskTag] = useState('To-do');\n    const [taskTypeCheck, setTaskTypeCheck] = useState([true, false, false]);\n    const [taskType, setTaskType] = useState('Personal');\n    const [taskDate, setTaskDate] = useState(new Date());\n    const [subTasks, setsubTask] = useState([{subTaskText:'',isComplete:false}]);\n    const [isOpenSnackbar, setIsOpenSnackbar] = useState(false);\n    const [errorSnackBar, setErrorSnackBar] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n\n    useEffect(() => {   \n         // Update the document title using the browser API    document.title = `You clicked ${count} times`;  \n        if(props.history.location.editableTask!==undefined){\n         let editableTask = props.history.location.editableTask;\n         setTaskName(editableTask.taskName);\n         setTaskDescription(editableTask.description);\n         setTaskTag(editableTask.tag);\n         // setting check according to prop value\n         setTaskType(editableTask.taskType);\n         if(editableTask.taskType==='Personal'){\n            setTaskTypeCheck([true, false, false])\n         }\n         else if(editableTask.taskType==='Official'){\n            setTaskTypeCheck([false, true, false])\n         }\n         else{\n            setTaskTypeCheck([false, false, true])\n         }\n         setTaskDate(editableTask.date)\n         setsubTask(editableTask.subTask);\n       }\n        }, [props.history.location.editableTask]);\n\n\n        const subTaskItemChange=(i,e) =>{\n            let tasks = [...subTasks];\n            tasks[i] = {...tasks[i],subTaskText:e.target.value};\n            setsubTask (tasks);\n        }\n\n        const disableError = () =>{\n            setErrorSnackBar(false);\n        }\n\n        const subTaskItemCHeck=(i) =>{\n            console.log(\"item check \",i);\n            let tasks = [...subTasks];\n\n            if(tasks[i].subTaskText.trim().length === 0 && tasks[i].isComplete===false){\n                console.log(\"empty check\");\n                setErrorMessage(\"Enter sub task before checking it as complete\");\n    \n                setErrorSnackBar(true);\n            }\n            else{\n            tasks[i] = {...tasks[i],isComplete:!tasks[i].isComplete};\n            setsubTask (tasks);}\n        }\n\n        const SubTaskList = () => {\n            const renderSubTasks = subTasks.map((subTask,i) => { \n                console.log(i);\n                return (\n                    <div key={i}\n                    style={{ display: \"flex\", width: \"100%\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\n                    <Checkbox\n                        // label='My checkbox'\n                        // labelStyle={{ color: 'green' }}\n                        // iconStyle={{ fill: 'green' }}\n                        // inputStyle={{ color: 'green' }}\n                        size={\"medium\"}\n                        checked={subTask.isComplete}\n                        onChange={()=>subTaskItemCHeck(i)}\n                        style={{ color: 'green' }} />\n    \n                    <div style={{ marginTop: \"1rem\" }} className=\"ui ten wide input field\">\n                        <input  value={subTask.subTaskText||''} onChange={(e)=>subTaskItemChange(i,e)} type=\"text\" placeholder={`Sub Task ${i+1}`} />\n                    </div>\n                    {/* trash button onclick function contains afilter that filters the subtask of which delete is pressed and filters it out */}\n                    <i style={{cursor:\"pointer\"}} onClick={()=>{setsubTask(subTasks.filter(sbtask => sbtask!== subTask))}} \n                        className=\"trash large icon grey\"></i>\n                </div>\n                \n                    ); \n            });\n        \n            return (\n                <div className=\"section-two\">\n                    {renderSubTasks}\n                    <div onClick={() => setsubTask([...subTasks,{subTaskText:\"\",isComplete:false}])}\n                         style={{ color: \"#2185d0\", fontSize: \"1.4rem\", cursor: \"pointer\" }}>\n                         <i className=\"plus icon blue\"> </i>\n                                Add new sub task\n                            </div>    \n                </div>\n            );\n        \n        }\n\n\n    const handleEditTask = () => {\n        console.log('editTask');\n        if(taskName.trim().length===0){\n            // alert(\"mandotory text\")\n            setErrorMessage(\"Task name is mandatory\")\n            setErrorSnackBar(true);\n        }\n        else{\n          \n            console.log(\"og state\",props.state.tasks);\n            var editableTask = props.history.location.editableTask;\n            var newState = props.state.tasks.map((mTask)=> mTask===editableTask ? {...editableTask,\n                taskName:taskName,description:taskDescription,tag:taskTag,subTask:subTasks,date:taskDate,taskType:taskType} \n            : mTask)\n            console.log(\"newtasklist --\",newState);\n            props.updateTaskList(newState);\n            history.push('/')\n            \n        }\n    }\n\n\n    if (props.state.login.token === undefined) {\n        return (<LoginPage >\n                  {history.push('/')}\n                </LoginPage>\n            );\n    }\n    else if(props.history.location.editableTask===undefined){\n        \n        return (\n            <Dashboard>\n                {history.push('/')}\n            </Dashboard>\n            );\n\n    }\n    else {\n\n    return (\n        \n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    \n                <div className=\"edit-task\">\n                    <ScreenHeader screenName=\"Edit Task\" />\n                    {/* <div className=\"ui input\">\n                    <input style={{ backgroundColor: \"#f2f2f2\" }} type=\"text\" placeholder=\"Task name\" />\n                </div> */}\n                    <div id=\"form\"className=\"ui form\">\n                        <div className=\"section-one\">\n                            <div className=\"ten wide field\">\n                                <label style={{ color: \"#a6a6a6\" }}>Enter Task Name</label>\n                                <input onChange={e => {setTaskName(e.target.value);setIsOpenSnackbar(false)}}\n                                    value={taskName}\n                                    style={{ backgroundColor: \"#f2f2f2\", fontSize: \"1.2rem\" }}\n                                    type=\"text\" placeholder=\"Task Name\" />\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"ten wide field\">\n                                <label style={{ color: \"#a6a6a6\" }}>Task Description</label>\n                                <textarea \n                                    value={taskDescription}\n                                    onChange={e => setTaskDescription(e.target.value)}\n                                    style={{ backgroundColor: \"#f2f2f2\", resize: \"none\", fontSize: \"1rem\" }}\n                                    rows=\"2\" type=\"text\" placeholder=\"Task Description\" />\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"ui basic buttons\">\n                                <button onClick={() => setTaskTag(\"To-do\")} \n                                    className={taskTag !== \"To-do\" ? \"ui button\" : \"ui button active\"}>\n                                    To-Do\n                                </button>\n                                <button onClick={() => setTaskTag(\"In-Progress\")} className={taskTag !== \"In-Progress\" ? \"ui button\" : \"ui button active\"}>In-Progress</button>\n                                <button onClick={() => setTaskTag(\"Done\")} className={taskTag !== \"Done\" ? \"ui button\" : \"ui button active\"}>Done</button>\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"checkbox-container\">\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[0]}\n                                        onClick={() => { setTaskTypeCheck([true, false, false]); setTaskType(\"Personal\") }}\n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Personal</div>\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[1]}\n                                        onClick={() => { setTaskTypeCheck([false, true, false]); setTaskType(\"Official\") }}\n    \n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Official\n                        </div>\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[2]}\n                                        onClick={() => { setTaskTypeCheck([false, false, true]); setTaskType(\"Miscellaneous\") }}\n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Miscellaneous\n                        </div>\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <StaticDatePicker taskDate={taskDate} setTaskDate={setTaskDate}\n                            // onDateChanged={()=>{console.log(\"date changed\");}}\n                            />\n                            <div className=\"ui hidden divider\"></div>\n                        </div>\n                        {SubTaskList()}\n    \n                    </div>\n                    <div className=\"ui hidden divider\"></div>\n                    <div className=\"buttons-container\">\n                        <button style={{ margin: \"1rem\" }} className=\"ui button\">Cancel</button>\n                        <button onClick={handleEditTask} className=\"ui green button\">Update</button>\n                    </div>\n                    {/* <SnackBar setIsOpenSnackbar={setIsOpenSnackbar}/> */}\n                    {isOpenSnackbar ? <SnackBar disableError={disableError} isError={false} isOpenSnackbar={isOpenSnackbar} /> : null}\n                    {errorSnackBar ? <SnackBar disableError={disableError} isError={true} errorMessage={errorMessage}  isOpenSnackbar={errorSnackBar} /> : null}\n                </div>\n            </MuiPickersUtilsProvider>\n    );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps,{updateTaskList})(EditTask);","import React from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport './Analytics.scss'\nimport { Pie } from 'react-chartjs-2';\n\nimport ScreenHeader from '../widgets/ScreenHeader'\n\nconst Analytics = (props) => {\n    let history = useHistory();\n\n\n    var toDoCount = _.countBy(props.state.tasks, (mTask) => {\n\n        return mTask.tag === 'To-do';\n\n    });\n    var inProgressCount = _.countBy(props.state.tasks, (mTask) => {\n\n        return mTask.tag === 'In-Progress';\n\n    });\n    var doneCount = _.countBy(props.state.tasks, (mTask) => {\n\n        return mTask.tag === 'Done';\n\n    });\n\n    const chartData = {\n        labels: ['To-do', 'In-Progress', 'Done'],\n\n        datasets: [\n            {\n                label: 'Rainfall',\n                backgroundColor: [\n                    '#f2c94c',\n                    '#27ae60',\n                    '#2f80ed',\n                ],\n                hoverBackgroundColor: [\n                    '#cfa936',\n                    '#1c7a44',\n                    '#1656ab',\n                ],\n                data: [toDoCount.true, inProgressCount.true, doneCount.true]\n            }\n        ]\n    }\n    const handleCreateTaskButton = () => {\n        history.push('/createtask');\n    }\n    return (\n        <div className=\"analytics\">\n            <ScreenHeader screenName=\"Analytics\" />\n            {props.state.tasks.length !== 0 ?\n                <div style={{ height: \"65vh\" }}>\n                    <Pie\n                        data={chartData}\n                        options={{\n                            title: {\n                                display: true,\n                                text: 'Your task trends',\n                                fontSize: 20,\n                            },\n                            legend: {\n                                display: true,\n                                position: 'bottom',\n                                labels: {\n                                    usePointStyle: true\n                                }\n                            },\n                            maintainAspectRatio: false\n                        }}\n                    />\n                </div>\n                :\n                <div style={{\n                    textAlign: \"center\", height: \"5rem\", backgroundColor: \"#2f80ed\", cursor: \"pointer\",\n                    borderTopRightRadius: \"0.5rem\", borderRadius: \"0.5rem\", width: \"18rem\", margin: \"auto\", marginTop: \"5vh\"\n                }}\n                    onClick={handleCreateTaskButton}\n                >\n                    <h3 style={{ padding: \"1.5rem\", color: \"white\" }}>Please add Some tasks!</h3>\n                </div>\n            }\n\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps)(Analytics);","import React from 'react';\nimport '../SideBar/SideBar.scss'\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { logout,showTaskType } from '../../actions';\n\n\nconst SideBar = (props) =>{\n    let history = useHistory();\n\n    const handleLogout = () =>{\n        props.logout()\n        history.push('/');\n    }\n    const handleAnalytics = () =>{\n        history.push('/analytics');\n    }\n    return(\n    <div className=\"side-bar\">\n        <div className=\"side-bar-content\">\n            <div className=\"profile-container\">\n                <img alt=\"avatar\" style={{height:\"3rem\",width:\"3rem\"}} src=\"https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png\"></img>\n            <div style={{display:\"flex\",flexDirection:\"column\",marginLeft:\"0.5rem\"}}>\n                   <div ><p>{props.state.login.email}</p></div>\n                   <div ><p>{props.state.login.email.substring(0, props.state.login.email.indexOf('@'))}</p></div> \n                    \n               </div>\n            </div>\n                <div className=\"sidebar-actions\">\n                <div className=\"tasktype-container\">\n                    <div>\n\n                    <div style={{color:\"white\",borderRadius:\"0.5rem\",padding:\"0.5vw\",margin:\"0.5vw\",background:\"#2f80ed\",cursor:\"pointer\"}}  onClick={()=>{props.showTaskType(['Personal','Official','Miscellaneous'])}} >\n                     All \n                </div>\n                <div style={{color:\"white\",borderRadius:\"0.5rem\",padding:\"0.5vw\",margin:\"0.5vw\",background:\"#21ba45\",cursor:\"pointer\"}} onClick={()=>{props.showTaskType(['Personal'])}} >\n                    Personal \n                </div>\n          \n                </div>\n                <div>\n            <div style={{color:\"white\",borderRadius:\"0.5rem\",padding:\"0.5vw\",margin:\"0.5vw\",background:\"#9b51e0\",cursor:\"pointer\"}}  onClick={()=>{props.showTaskType(['Official'])}} >\n                    Official \n                </div>\n                <div style={{color:\"white\",borderRadius:\"0.5rem\",padding:\"0.5vw\",margin:\"0.5vw\",background:\"#f2994a\",cursor:\"pointer\"}} onClick={()=>{props.showTaskType(['Miscellaneous'])}} >\n                    Misc.\n                </div>\n                </div>\n                </div>\n                <div className=\"analytics-container\" onClick={handleAnalytics}>Analytics</div>\n\n                </div>\n            <div className=\"logout-container\" onClick={handleLogout}><img style={{height:\"2rem\",width:\"2rem\"}} src=\"https://cdn.pixabay.com/photo/2014/04/10/17/59/exit-321143_960_720.png\" alt=\"logout\"></img></div>\n            \n        </div>\n    </div>\n);\n} \n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\nexport default connect(mapStateToProps, { logout ,showTaskType})(SideBar);","import React from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux'\nimport { HashRouter, Route } from 'react-router-dom'\n\nimport LoginPage from '../LoginPage';\nimport DashBoard from '../Dashboard';\nimport CreateTask from '../CreateTask';\nimport EditTask from '../EditTask';\nimport Analytics from '../Analytics';\nimport SideBar from '../SideBar'\n\nclass App extends React.Component {\n\n    renderMainPage = () => {\n        if (this.props.state.login.token === undefined) {\n            return <LoginPage />;\n        }\n        else {\n            return <DashBoard />;\n        }\n    }\n\n    render() {\n        return (\n            <HashRouter>\n                <div className=\"App\">\n                {this.props.state.login.token !== undefined && <SideBar/>}\n                <Route path=\"/\" exact component={this.renderMainPage} />\n                <Route path=\"/createtask\" exact component={CreateTask} />\n                <Route path=\"/edittask\" exact component={EditTask} />\n                <Route path=\"/analytics\" exact component={Analytics} />\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps)(App);","import {combineReducers} from 'redux';\n\nimport loginReducer from './loginReducer';\nimport taskReducer from './taskReducer';\nimport taskTypesReducer from './taskTypesReducer';\n\nexport default combineReducers({\n    login: loginReducer,\n    tasks:taskReducer,\n    showTaskType:taskTypesReducer\n});","/* eslint-disable import/no-anonymous-default-export */\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case 'USER_LOGIN':\n            return action.payload;\n         case 'USER_LOGOUT':\n            return {};\n        default:\n            return state;\n    }\n};","// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = [], action) => {\n    switch (action.type) {\n        case 'CREATE_TASK':\n            return [...state, action.payload];\n        case 'UPDATE_TASKS':\n            console.log(\"update task reducer\");\n            return action.payload;\n        case 'USER_LOGOUT':\n            return [];\n        default:\n            return state;\n    }\n};","/* eslint-disable import/no-anonymous-default-export */\n\nexport default (state = ['Personal','Official','Miscellaneous'],action)=>{\n    switch(action.type){\n        case 'UPDATE_SHOW_LIST':\n            return action.payload;\n        default:\n            return state;\n    }\n\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport { Provider } from 'react-redux';\nimport { createStore,applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist' // imports from redux-persist\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport reducers from './reducers'\n\nconst persistConfig = { // configuration object for redux-persist\n    key: 'root',\n    storage, // define which storage to use\n}\nconst persistedReducer = persistReducer(persistConfig, reducers) // create a persisted reducer\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(persistedReducer,\n    composeEnhancers(applyMiddleware(thunk))\n    );\n\nconst  persistor = persistStore(store); // used to create the persisted store, persistor will be used in the next step\n\nReactDOM.render(\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n    <App />\n\n    </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}