{"version":3,"sources":["components/LoginPage/LoginSectionOne/logo.png","components/LoginPage/LoginSectionOne/index.js","apis/reqres.js","actions/index.js","components/LoginPage/LoginSectionTwo/index.js","components/LoginPage/index.js","components/widgets/StaticDatePicker.js","components/widgets/TaskCard.js","components/Dashboard/index.js","components/widgets/ScreenHeader.js","components/widgets/SnackBar.js","components/CreateTask/index.js","components/EditTask/index.js","components/Analytics/index.js","components/SideBar/index.js","components/App/index.js","reducers/index.js","reducers/loginReducer.js","reducers/taskReducer.js","index.js"],"names":["LoginSectionOne","className","src","logo","alt","axios","create","baseURL","logout","type","updateTaskList","tasks","payload","LoginSectionTwo","props","passwordRef","React","createRef","passwordTypeRef","handleEyeClick","currentType","current","handleChangeEmail","event","setState","email","target","value","emailRef","classList","remove","handleChangePassword","password","handleSubmit","preventDefault","state","login","add","onSubmit","this","ref","placeholder","onChange","onClick","Component","connect","dispatch","getstate","a","reqres","post","response","token","data","LoginPage","StaticDatePicker","defaultMaterialTheme","createMuiTheme","palette","primary","green","overrides","MuiPickersToolbar","toolbar","MuiPickersToolbarText","toolbarBtnSelected","color","toolbarTxt","ThemeProvider","theme","keyboardPicker","autoOk","variant","inputVariant","format","taskDate","InputAdornmentProps","position","setTaskDate","DatePicker","label","orientation","subTask","history","useHistory","useState","anchorEl","setAnchorEl","handleClose","operation","task","console","log","dTask","newState","filter","mtask","handleDeleteTask","push","pathname","editableTask","CardMenu","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","style","backgroundColor","margin","borderRadius","marginLeft","display","justifyContent","marginTop","padding","taskType","aria-controls","aria-haspopup","currentTarget","cursor","class","flexDirection","marginBottom","taskName","description","map","subT","i","alignItems","Checkbox","size","checked","isComplete","subTasks","newSubTasks","sTask","updatedMainTasks","mainTask","checkpressed","subTaskText","Date","handleCreateTaskButton","renderTaskLists","tag","utils","DateFnsUtils","paddingLeft","find","width","border","textAlign","borderTopRightRadius","borderTopLeftRadius","length","height","ScreenHeader","fontSize","screenName","Alert","elevation","useStyles","makeStyles","root","spacing","CustomizedSnackbar","classes","isOpenSnackbar","setOpen","reason","disableError","Snackbar","autoHideDuration","isError","severity","createTask","date","setTaskName","taskDescription","setTaskDescription","taskTag","setTaskTag","taskTypeCheck","setTaskTypeCheck","setTaskType","setsubTask","setIsOpenSnackbar","errorSnackBar","setErrorSnackBar","undefined","e","resize","rows","renderSubTasks","alignContent","subTaskItemCHeck","subTaskItemChange","sbtask","SubTaskList","location","App","renderMainPage","path","exact","component","CreateTask","EditTask","Analytics","combineReducers","action","persistConfig","key","storage","persistedReducer","persistReducer","reducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b9466248.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.24a3167d.png\";","import React from 'react-dom';\nimport './LoginSectionOne.scss';\nimport logo from './logo.png';\nconst LoginSectionOne = () => {\n    return (\n        <div className=\"section-1\">\n            <div className=\"logo-container\" >\n                <img  src={logo} alt=\"Logo\" />\n                <p><strong>switch</strong>on</p>\n            </div>\n            <h3>Assignments</h3>\n        </div>\n    );\n}\n\nexport default LoginSectionOne;","import axios from 'axios';\n\nexport default axios.create({\nbaseURL:'https://reqres.in/api'\n});","import reqres from '../apis/reqres'\n\nexport const login = (email) => async (dispatch, getstate) => {\n    const response = await reqres.post('/login', { email: \"eve.holt@reqres.in\", password: \"cityslicka\" });\n    dispatch({\n        type: 'USER_LOGIN',\n        payload: {\n            token: response.data,\n            email : email\n        }\n    });\n}\n\n\nexport const logout = () => {\n    return {\n        type: 'USER_LOGOUT',\n    }\n}\n\nexport const updateTaskList = (tasks) => {\n    return {\n        type: 'UPDATE_TASKS',\n        payload: tasks\n    }\n}\n\n\nexport const createTask = (taskName, description, tag, taskType, date, subTask) => {\n    return {\n        type: 'CREATE_TASK',\n        payload: {\n            taskName,\n            description,\n            tag,\n            taskType,\n            date,\n            subTask: subTask\n        }\n    }\n}","import React from 'react';\nimport './LoginSectionTwo.scss';\n\nimport { connect } from 'react-redux';\nimport { login } from '../../../actions';\nclass LoginSectionTwo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.emailRef = React.createRef();\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    passwordRef = React.createRef();\n    passwordTypeRef = React.createRef();\n\n    handleEyeClick = () =>{\n        var currentType = this.passwordTypeRef.current.type;\n        if(currentType==='password'){\n            this.passwordTypeRef.current.type='text'\n        }\n        else{\n            this.passwordTypeRef.current.type = 'password'\n        }\n        \n    }\n    handleChangeEmail = (event) => {\n        this.setState({ email: event.target.value });\n        this.emailRef.current.classList.remove('error');\n\n    }\n    handleChangePassword = (event) => {\n        this.setState({ password: event.target.value });\n        this.passwordRef.current.classList.remove('error');\n\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.email !== '' && this.state.password !== '') {\n            this.props.login(this.state.email);\n        }\n        else {\n            if (this.state.email === '') {\n                this.emailRef.current.classList.add('error');\n            }\n\n            if (this.state.password === '') {\n                this.passwordRef.current.classList.add('error');\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"section-2\">\n                <div className=\"login-container\">\n                    <h1>To-Do App</h1>\n                    <form className=\"ui form\" onSubmit={this.handleSubmit}>\n                        <div ref={this.emailRef} className=\"ui field left icon input\">\n                            <input type=\"email\" \n                                value={this.state.email} \n                                placeholder={\"Email ID\"} \n                                onChange={this.handleChangeEmail} />\n                            <i className=\"envelope outline icon\"></i>\n                        </div>\n                        <div ref={this.passwordRef} className=\"ui field left icon input\">\n                            <input ref={this.passwordTypeRef} \n                                type=\"password\" \n                                value={this.state.password} \n                                placeholder={\"Password\"} \n                                onChange={this.handleChangePassword} />\n                            <i className=\"lock icon\"></i>\n                            <div onClick={this.handleEyeClick} className=\"ui icon input\">\n                                <i className=\"eye link icon\"></i>\n                            </div>\n                        </div>\n                        <button className=\"ui field green button\" type=\"submit\" value=\"Submit\" > Login</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default connect(null, { login })(LoginSectionTwo);","import React from 'react';\nimport './LoginPage.scss';\nimport LoginSectionOne from './LoginSectionOne';\nimport LoginSectionTwo from './LoginSectionTwo';\nclass LoginPage extends React.Component {\n\n    render() {\n        return (\n            <div className=\"LoginPage\">\n                <div className=\"container\">\n                    <LoginSectionOne />\n                    <LoginSectionTwo/>\n                </div>\n            </div>\n        );\n    }\n}\nexport default LoginPage;","import React, { Fragment } from \"react\";\nimport { DatePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport green from \"@material-ui/core/colors/green\";\n\nfunction StaticDatePicker(props) {\n  // const [selectedDate, handleDateChange] = useState(new Date());\n  const defaultMaterialTheme = createMuiTheme({\n    palette: {\n      primary: green,\n    },\n    overrides: {\n      MuiPickersToolbar: {\n        toolbar: {\n          // backgroundColor: green[900],\n        },\n      },\n      MuiPickersToolbarText: {\n        toolbarBtnSelected: {\n          color: \"#FFFF\"\n        },\n        toolbarTxt: {\n          color: \"#FFFF\"\n        }\n      }\n    },\n  });\n\n  return (\n    <Fragment>\n      <ThemeProvider theme={defaultMaterialTheme}>\n        {props.keyboardPicker === true ? <KeyboardDatePicker\n          autoOk\n          variant=\"inline\"\n          inputVariant=\"outlined\"\n          format=\"dd-MM-yyyy\"\n          value={props.taskDate}\n          InputAdornmentProps={{ position: \"start\" }}\n          onChange={props.setTaskDate}\n        /> : <DatePicker\n            label=\"Select Date\"\n            autoOk\n            variant=\"inline\"\n            format=\"dd-MM-yyyy\"\n            value={props.taskDate}\n            onChange={props.setTaskDate}\n            orientation=\"landscape\"\n          />}\n\n\n      </ThemeProvider>\n\n    </Fragment>\n  );\n}\n\nexport default StaticDatePicker;\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport {useHistory} from 'react-router-dom'\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {updateTaskList} from '../../actions/index';\n\nconst TaskCard = ( props ) => {\n    let history = useHistory();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const cardOptionsClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleDeleteTask=(dTask)=>{\n        console.log(\"deleting task ->\",dTask);\n        var newState = props.state.tasks.filter((mtask)=> mtask!==dTask)\n        console.log(\"og state\",props.state.tasks);\n        console.log(\"new state\",newState);\n        props.updateTaskList(newState);\n    }\n\n    const handleClose = (operation,{task}) => {\n        setAnchorEl(null);\n        console.log('clicked', operation , '===',task);\n        if(operation==='Delete'){\n            handleDeleteTask(task);\n        }\n        else{\n            console.log(\"edittask\");\n            history.push({\n                pathname: '/edittask',\n                editableTask: task\n              })\n        }\n    };\n\n    const CardMenu = (task) => {\n        return (\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={() => handleClose('Edit',task)}>Edit</MenuItem>\n                <MenuItem onClick={() => handleClose('Delete',task)}>Delete</MenuItem>\n            </Menu>\n        );\n    }\n    const checkpressed = (subTasks,subTask) =>{\n        console.log(\"check pressed -\");\n        console.log(\"==== checked subt\",subTasks);\n        // var newSubT = {...subT, isComplete:!subT.isComplete};\n        var newSubTasks = subTasks.map((sTask)=> sTask===subTask ? {...subTask,isComplete : !subTask.isComplete} : sTask)\n        console.log(\"==== checked newsubt\",newSubTasks);\n        console.log(\"===task \",props.task);\n        console.log(\"===========og state \",props.state.tasks);\n        var updatedMainTasks = props.state.tasks.map((mainTask) => mainTask=== props.task ? {...mainTask,subTask:newSubTasks}  : mainTask)\n        console.log(\"===========new state \",updatedMainTasks);\n        props.updateTaskList(updatedMainTasks);\n    }\n\n    const renderSubtask = (subTask) => {\n        return subTask.map((subT,i) => {\n\n            return (\n                <div style={{display:\"flex\",alignItems:\"center\"}}> <Checkbox\n                // label='My checkbox'\n                // labelStyle={{ color: 'green' }}\n                // iconStyle={{ fill: 'green' }}\n                // inputStyle={{ color: 'green' }}\n                size={\"medium\"}\n                checked={subT.isComplete}\n                // onChange={()=>subTaskItemCHeck(i)}\n                onClick = {()=>{checkpressed(subTask,subT)}}\n                style={{ color: 'green' }} />\n                <p>{subT.subTaskText}</p>\n                </div>\n            )\n        })\n    }\n    return (\n        <div style={{backgroundColor:\"#ffffff\", margin:\"1rem\",borderRadius:\"0.25rem\"}}>\n            <div style={{ marginLeft:\"0.5rem\", display: \"flex\", justifyContent: \"space-between\" }}>\n                <div style={{backgroundColor:\"#21ba45\",marginTop:\"0.5rem\",borderRadius:\"0.25rem\"}}>\n                    <p style={{padding:\".25rem\",margin:\".15rem\",color:\"white\"}}>{props.task.taskType}</p>\n                </div>\n                <i aria-controls=\"simple-menu\"\n                    aria-haspopup=\"true\"\n                    onClick={cardOptionsClick}\n                    style={{ cursor: \"pointer\",marginTop:\"0.5rem\" }}\n                    class=\"ellipsis vertical grey icon\" />\n                <CardMenu task={props.task}/>\n            </div>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <h4 style={{ marginLeft:\"0.5rem\",marginBottom: \"0rem\" }}>{props.task.taskName}</h4>\n                {props.task.description ? <p style={{marginLeft:\"0.5rem\",marginBottom:\"0\", color: \"gray\" }}>{props.task.description}</p> : null}\n                {props.task.subTask ? renderSubtask(props.task.subTask) : null}\n\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) =>{\n    return {\n        state\n    }\n}\n\nexport default connect(mapStateToProps,{updateTaskList})(TaskCard);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { logout } from '../../actions';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport {find} from 'lodash';\n\nimport '../Dashboard/Dashboard.scss';\nimport StaticDatePicker from '../widgets/StaticDatePicker';\nimport TaskCard from '../widgets/TaskCard'\n\nconst DashBoard = (props) => {\n    const [taskDate, setTaskDate] = useState(new Date());\n\n    let history = useHistory();\n    const handleCreateTaskButton = () => {\n        history.push('/createtask');\n    }\n    const handleEditTaskButton = () => {\n        history.push('/edittask');\n    }\n    const handleAnalyticskButton = () => {\n        history.push('/analytics');\n    }\n\n    const handleLogout = () => {\n        console.log('handle logout');\n        props.logout();\n    }\n    const renderTaskLists = (tag) => {\n\n        var tagtasks= props.state.tasks.filter(task=>task.tag ===tag)\n\n        return tagtasks.map((task) => {\n            return (\n                <TaskCard task={task} />\n            );\n        })\n\n    }\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <div className=\"dashboard\">\n                <div className=\"ui hidden divider\"></div>\n\n                <div className=\"top-row\">\n                    <div id=\"search-bar\" className=\"ui icon input search\">\n                        <input style={{ paddingLeft: \"1rem\" }} className=\"prompt\" type=\"text\" placeholder=\"Search Tasks...\" />\n                        <i className=\"search icon\"></i>\n                    </div>\n\n                    <div>\n                        <button onClick={handleCreateTaskButton} class=\"positive ui button\">New Task</button>\n                    </div>\n                    <div>\n                        <StaticDatePicker keyboardPicker={true} taskDate={taskDate} setTaskDate={setTaskDate} />\n                    </div>\n                </div>\n                <div className=\"tasks-container\">\n                { find(props.state.tasks,{tag:\"To-do\"})? \n                 <div style={{backgroundColor:\"#f8f8f9\",width:\"300px\",border:\"red\"}}>\n                 <div style={{textAlign:\"center\",backgroundColor:\"#f2c94c\",borderTopRightRadius:\"0.5rem\",borderTopLeftRadius:\"0.5rem\"}}>\n                     <h3 style={{padding:\"0.27rem\",color:\"white\"}}>To do</h3>\n             </div>\n             {renderTaskLists(\"To-do\")}\n             </div>\n                : null}\n               \n               { find(props.state.tasks,{tag:\"In-Progress\"})? \n                <div style={{backgroundColor:\"#f8f8f9\",width:\"300px\",border:\"red\"}}>\n                    <div style={{textAlign:\"center\",backgroundColor:\"#21ba45\",borderTopRightRadius:\"0.5rem\",borderTopLeftRadius:\"0.5rem\"}}>\n                        <h3 style={{padding:\"0.27rem\",color:\"white\"}}>In-progress</h3>\n                </div>\n                {renderTaskLists(\"In-Progress\")}\n                </div>\n                : null}\n               { find(props.state.tasks,{tag:\"Done\"})? \n                <div style={{backgroundColor:\"#f8f8f9\",width:\"300px\",border:\"red\"}}>\n                    <div style={{textAlign:\"center\",backgroundColor:\"#2f80ed\",borderTopRightRadius:\"0.5rem\",borderTopLeftRadius:\"0.5rem\"}}>\n                        <h3 style={{padding:\"0.27rem\",color:\"white\"}}>Done</h3>\n                </div>\n                {renderTaskLists(\"Done\")}\n                </div>\n                : null}\n\n                </div> \n            {props.state.tasks.length===0?\n            // <div style={{marginTop:\"5rem\",textAlign:\"center\",backgroundColor:\"red\"}}> <h2>Please add some tasks!</h2></div>\n            <div style={{textAlign:\"center\",height:\"5rem\",backgroundColor:\"#2f80ed\",cursor:\"pointer\",\n                    borderTopRightRadius:\"0.5rem\",borderRadius:\"0.5rem\",width:\"18rem\",margin:\"auto\",marginTop:\"5vh\"}}\n                 onClick={handleCreateTaskButton}\n                    >\n                <h3 style={{padding:\"1.5rem\",color:\"white\"}}>Please add Some tasks!</h3>\n                </div>\n            :\n            null\n            }\n            \n\n            </div>\n        </MuiPickersUtilsProvider>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\nexport default connect(mapStateToProps, { logout })(DashBoard);","import React from 'react';\nimport {useHistory} from 'react-router-dom';\n\nconst ScreenHeader = (props) => {\n    let history = useHistory();\n\n    return (\n        <div>\n            <div className=\"ui hidden divider\"></div>\n            <h2 className=\"ui header\">\n                <i onClick={()=>{history.push('/')}} className=\"arrow left icon\" style={{fontSize:\"1.5rem\",cursor:\"pointer\"}}></i>\n                <div className=\"content\">{props.screenName}</div>\n            </h2>\n            <div className=\"ui hidden divider\"></div>\n\n            <div className=\"ui divider\"></div>\n        </div>\n    );\n}\n\nexport default ScreenHeader;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbar(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(props.isOpenSnackbar);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    props.disableError();\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      \n      <Snackbar open={open} autoHideDuration={1000} onClose={handleClose}>\n       \n      {!props.isError ?  <Alert onClose={handleClose} severity=\"success\">Task Added!</Alert> \n          : <Alert onClose={handleClose} severity=\"error\">Task name is mandatory!</Alert> \n        }\n\n       \n        {/* <Alert onClose={handleClose} severity=\"success\">\n          This is a success message!\n        </Alert> */}\n      </Snackbar>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {useHistory} from 'react-router-dom'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport './CreateTask.scss'\nimport { createTask } from '../../actions/index'\nimport ScreenHeader from '../widgets/ScreenHeader';\nimport StaticDatePicker from '../widgets/StaticDatePicker'\nimport SnackBar from '../widgets/SnackBar'\nimport LoginPage from '../LoginPage'\n\nconst CreateTask = (props) => {\n    let history = useHistory();\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskTag, setTaskTag] = useState('To-do');\n    const [taskTypeCheck, setTaskTypeCheck] = useState([true, false, false]);\n    const [taskType, setTaskType] = useState('Personal');\n    const [taskDate, setTaskDate] = useState(new Date());\n    const [subTasks, setsubTask] = useState([{subTaskText:'',isComplete:false}]);\n    const [isOpenSnackbar, setIsOpenSnackbar] = useState(false);\n    const [errorSnackBar, setErrorSnackBar] = useState(false);\n\n    const disableError = () =>{\n        setErrorSnackBar(false);\n    }\n    const handleCreateTask = () => {\n        if(taskName===''){\n            // alert(\"mandotory text\")\n            setErrorSnackBar(true);\n        }\n        else{\n        props.createTask(taskName, taskDescription, taskTag, taskType, taskDate, \n            subTasks.filter(sbtask => sbtask.subTaskText!== ''));\n            setTaskName('');\n            setTaskDescription('');\n            setTaskTag('To-do');\n            setTaskTypeCheck([true, false, false]);\n            setTaskType('Personal');\n            setTaskDate(new Date());\n            setsubTask([{subTaskText:'',isComplete:false}]);\n            setIsOpenSnackbar(true);\n\n        }\n        // console.log(\"name\", taskName);\n        // console.log(\"desc\", taskDescription);\n        // console.log(\"tag\", taskTag);\n        // console.log(\"task type \", taskType);\n        // console.log(\"task taskDate \", taskDate);\n        // console.log(\"subtask array\",subTasks);\n    }\n    const subTaskItemChange=(i,e) =>{\n        let tasks = [...subTasks];\n        tasks[i] = {...tasks[i],subTaskText:e.target.value};\n        setsubTask (tasks);\n    }\n    const subTaskItemCHeck=(i) =>{\n        let tasks = [...subTasks];\n        tasks[i] = {...tasks[i],isComplete:!tasks[i].isComplete};\n        setsubTask (tasks);\n    }\n    const SubTaskList = () => {\n        const renderSubTasks = subTasks.map((subTask,i) => { \n            console.log(i);\n            return (\n                <div key={i}\n                style={{ display: \"flex\", width: \"100%\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\n                <Checkbox\n                    // label='My checkbox'\n                    // labelStyle={{ color: 'green' }}\n                    // iconStyle={{ fill: 'green' }}\n                    // inputStyle={{ color: 'green' }}\n                    size={\"medium\"}\n                    checked={subTask.isComplete}\n                    onChange={()=>subTaskItemCHeck(i)}\n                    style={{ color: 'green' }} />\n\n                <div style={{ marginTop: \"1rem\" }} className=\"ui ten wide input field\">\n                    <input  value={subTask.subTaskText||''} onChange={(e)=>subTaskItemChange(i,e)} type=\"text\" placeholder={`Sub Task ${i+1}`} />\n                </div>\n                {/* trash button onclick function contains afilter that filters the subtask of which delete is pressed and filters it out */}\n                <i style={{cursor:\"pointer\"}} onClick={()=>{setsubTask(subTasks.filter(sbtask => sbtask!== subTask))}} \n                    className=\"trash large icon grey\"></i>\n            </div>\n            \n                ); \n        });\n    \n        return (\n            <div className=\"section-two\">\n                {renderSubTasks}\n                <div onClick={() => setsubTask([...subTasks,{subTaskText:\"\",isComplete:false}])}\n                     style={{ color: \"#2185d0\", fontSize: \"1.4rem\", cursor: \"pointer\" }}>\n                     <i className=\"plus icon blue\"> </i>\n                            Add new sub task\n                        </div>    \n            </div>\n        );\n    \n    }\n    // const handleTaskNameCHange = (event) =>{\n    //     setTaskName(event.target.value);\n    //     console.log('task name',taskName);\n    // }\n\n    if (props.state.login.token === undefined) {\n        return (<LoginPage >\n                {history.push('/')}\n                </LoginPage>\n            );\n    }\n    else {\n        return (\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    \n                <div className=\"create-task\">\n                    <ScreenHeader screenName=\"Create Task\" />\n                    {/* <div className=\"ui input\">\n                    <input style={{ backgroundColor: \"#f2f2f2\" }} type=\"text\" placeholder=\"Task name\" />\n                </div> */}\n                    <div id=\"form\"className=\"ui form\">\n                        <div className=\"section-one\">\n                            <div className=\"ten wide field\">\n                                <label style={{ color: \"#a6a6a6\" }}>Enter Task Name</label>\n                                <input onChange={e => {setTaskName(e.target.value);setIsOpenSnackbar(false)}}\n                                    value={taskName}\n                                    style={{ backgroundColor: \"#f2f2f2\", fontSize: \"1.2rem\" }}\n                                    type=\"text\" placeholder=\"Task Name\" />\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"ten wide field\">\n                                <label style={{ color: \"#a6a6a6\" }}>Task Description</label>\n                                <textarea \n                                    value={taskDescription}\n                                    onChange={e => setTaskDescription(e.target.value)}\n                                    style={{ backgroundColor: \"#f2f2f2\", resize: \"none\", fontSize: \"1rem\" }}\n                                    rows=\"2\" type=\"text\" placeholder=\"Task Description\" />\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"ui basic buttons\">\n                                <button onClick={() => setTaskTag(\"To-do\")} \n                                    className={taskTag !== \"To-do\" ? \"ui button\" : \"ui button active\"}>\n                                    To-Do\n                                </button>\n                                <button onClick={() => setTaskTag(\"In-Progress\")} className={taskTag !== \"In-Progress\" ? \"ui button\" : \"ui button active\"}>In-Progress</button>\n                                <button onClick={() => setTaskTag(\"Done\")} className={taskTag !== \"Done\" ? \"ui button\" : \"ui button active\"}>Done</button>\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <div className=\"checkbox-container\">\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[0]}\n                                        onClick={() => { setTaskTypeCheck([true, false, false]); setTaskType(\"Personal\") }}\n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Personal</div>\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[1]}\n                                        onClick={() => { setTaskTypeCheck([false, true, false]); setTaskType(\"Official\") }}\n    \n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Official\n                        </div>\n                                <div >\n                                    <Checkbox checked={taskTypeCheck[2]}\n                                        onClick={() => { setTaskTypeCheck([false, false, true]); setTaskType(\"Miscellaneous\") }}\n                                        // labelStyle={{ color: 'green' }}\n                                        // iconStyle={{ fill: 'green' }}\n                                        // inputStyle={{ color: 'green' }}\n                                        style={{ color: 'green' }}\n                                    />\n                                Miscellaneous\n                        </div>\n                            </div>\n                            <div className=\"ui hidden divider\"></div>\n    \n                            <StaticDatePicker taskDate={taskDate} setTaskDate={setTaskDate}\n                            // onDateChanged={()=>{console.log(\"date changed\");}}\n                            />\n                            <div className=\"ui hidden divider\"></div>\n                        </div>\n                        {SubTaskList()}\n    \n                    </div>\n                    <div className=\"ui hidden divider\"></div>\n                    <div className=\"buttons-container\">\n                        <button style={{ margin: \"1rem\" }} className=\"ui button\">Cancel</button>\n                        <button onClick={handleCreateTask} className=\"ui green button\">Create</button>\n                    </div>\n                    {/* <SnackBar setIsOpenSnackbar={setIsOpenSnackbar}/> */}\n                    {isOpenSnackbar ? <SnackBar disableError={disableError} isError={false} isOpenSnackbar={isOpenSnackbar} /> : null}\n                    {errorSnackBar ? <SnackBar disableError={disableError} isError={true} isOpenSnackbar={errorSnackBar} /> : null}\n                </div>\n            </MuiPickersUtilsProvider>\n        );\n    }\n    \n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps, { createTask })(CreateTask);","import React, { useState } from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\n\nimport './EditTask.scss'\nimport ScreenHeader from '../widgets/ScreenHeader'\nimport LoginPage from '../LoginPage'\nimport Dashboard from '../Dashboard'\n\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { updateTaskList } from '../../actions/index'\nimport StaticDatePicker from '../widgets/StaticDatePicker'\nimport SnackBar from '../widgets/SnackBar'\nimport { tr } from 'date-fns/locale';\n\n\nconst EditTask = (props) => {\n    let history = useHistory()\n\n    const [taskName, setTaskName] = useState('');\n    const [taskDescription, setTaskDescription] = useState('');\n    const [taskTag, setTaskTag] = useState('To-do');\n    const [taskTypeCheck, setTaskTypeCheck] = useState([true, false, false]);\n    const [taskType, setTaskType] = useState('Personal');\n    const [taskDate, setTaskDate] = useState(new Date());\n    const [subTasks, setsubTask] = useState([{subTaskText:'',isComplete:false}]);\n    const [isOpenSnackbar, setIsOpenSnackbar] = useState(false);\n    const [errorSnackBar, setErrorSnackBar] = useState(false);\n\n    // const {taskName} = props.history.location.editableTask;\n\n    if(props.history.location.editableTask){\n        let editableTask=props.history.location.editableTask;\n        console.log(\"editable      \",editableTask);\n        // setTaskName(editableTask.taskName);\n        // setTaskDescription(editableTask.description);\n        // setTaskTag(editableTask.tag);\n\n        // if(editableTask.taskType==='Personal'){\n        //     setTaskTypeCheck([true,false,false])\n        // }\n        // else if(editableTask.taskType==='Official'){\n        //     setTaskTypeCheck([false,true,false])\n        // }\n        // else{\n        //     setTaskTypeCheck([false,false,true])\n        // }\n\n        // setTaskType(editableTask.taskType)\n        // setTaskDate(editableTask.date)\n        // setsubTask(editableTask.subTask)\n    \n    }\n    const subTaskItemChange=(i,e) =>{\n        let tasks = [...subTasks];\n        tasks[i] = {...tasks[i],subTaskText:e.target.value};\n        setsubTask (tasks);\n    }\n    const subTaskItemCHeck=(i) =>{\n        let tasks = [...subTasks];\n        tasks[i] = {...tasks[i],isComplete:!tasks[i].isComplete};\n        setsubTask (tasks);\n    }\n    const SubTaskList = () => {\n        const renderSubTasks = subTasks.map((subTask,i) => { \n            console.log(i);\n            return (\n                <div key={i}\n                style={{ display: \"flex\", width: \"100%\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\n                <Checkbox\n                    // label='My checkbox'\n                    // labelStyle={{ color: 'green' }}\n                    // iconStyle={{ fill: 'green' }}\n                    // inputStyle={{ color: 'green' }}\n                    size={\"medium\"}\n                    checked={subTask.isComplete}\n                    onChange={()=>subTaskItemCHeck(i)}\n                    style={{ color: 'green' }} />\n\n                <div style={{ marginTop: \"1rem\" }} className=\"ui ten wide input field\">\n                    <input  value={subTask.subTaskText||''} onChange={(e)=>subTaskItemChange(i,e)} type=\"text\" placeholder={`Sub Task ${i+1}`} />\n                </div>\n                {/* trash button onclick function contains afilter that filters the subtask of which delete is pressed and filters it out */}\n                <i style={{cursor:\"pointer\"}} onClick={()=>{setsubTask(subTasks.filter(sbtask => sbtask!== subTask))}} \n                    className=\"trash large icon grey\"></i>\n            </div>\n            \n                ); \n        });\n    \n        return (\n            <div className=\"section-two\">\n                {renderSubTasks}\n                <div onClick={() => setsubTask([...subTasks,{subTaskText:\"\",isComplete:false}])}\n                     style={{ color: \"#2185d0\", fontSize: \"1.4rem\", cursor: \"pointer\" }}>\n                     <i className=\"plus icon blue\"> </i>\n                            Add new sub task\n                        </div>    \n            </div>\n        );\n    \n    }\n\n\n    console.log(\"props -----\",props.history.location.editableTask);\n    const handleEditTask = () => {\n        console.log('editTask');\n    }\n\n\n    const disableError = () =>{\n        setErrorSnackBar(false);\n    }\n\n    if (props.state.login.token === undefined) {\n        return (<LoginPage >\n                  {history.push('/')}\n                </LoginPage>\n            );\n    }\n    else if(props.history.location.editableTask===undefined){\n        \n        return (\n            <Dashboard>\n                {history.push('/')}\n            </Dashboard>\n            );\n\n    }\n    else {\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    \n        <div className=\"create-task\">\n            <ScreenHeader screenName=\"Edit Task\" />\n            {/* <div className=\"ui input\">\n            <input style={{ backgroundColor: \"#f2f2f2\" }} type=\"text\" placeholder=\"Task name\" />\n        </div> */}\n            <div id=\"form\"className=\"ui form\">\n                <div className=\"section-one\">\n                    <div className=\"ten wide field\">\n                        <label style={{ color: \"#a6a6a6\" }}>Enter Task Name</label>\n                        <input onChange={e => {setTaskName(e.target.value);setIsOpenSnackbar(false)}}\n                            value={taskName}\n                            style={{ backgroundColor: \"#f2f2f2\", fontSize: \"1.2rem\" }}\n                            type=\"text\" placeholder=\"Task Name\" />\n                    </div>\n                    <div className=\"ui hidden divider\"></div>\n\n                    <div className=\"ten wide field\">\n                        <label style={{ color: \"#a6a6a6\" }}>Task Description</label>\n                        <textarea \n                            value={taskDescription}\n                            onChange={e => setTaskDescription(e.target.value)}\n                            style={{ backgroundColor: \"#f2f2f2\", resize: \"none\", fontSize: \"1rem\" }}\n                            rows=\"2\" type=\"text\" placeholder=\"Task Description\" />\n                    </div>\n                    <div className=\"ui hidden divider\"></div>\n\n                    <div className=\"ui basic buttons\">\n                        <button onClick={() => setTaskTag(\"To-do\")} \n                            className={taskTag !== \"To-do\" ? \"ui button\" : \"ui button active\"}>\n                            To-Do\n                        </button>\n                        <button onClick={() => setTaskTag(\"In-Progress\")} className={taskTag !== \"In-Progress\" ? \"ui button\" : \"ui button active\"}>In-Progress</button>\n                        <button onClick={() => setTaskTag(\"Done\")} className={taskTag !== \"Done\" ? \"ui button\" : \"ui button active\"}>Done</button>\n                    </div>\n                    <div className=\"ui hidden divider\"></div>\n\n                    <div className=\"checkbox-container\">\n                        <div >\n                            <Checkbox checked={taskTypeCheck[0]}\n                                onClick={() => { setTaskTypeCheck([true, false, false]); setTaskType(\"Personal\") }}\n                                // labelStyle={{ color: 'green' }}\n                                // iconStyle={{ fill: 'green' }}\n                                // inputStyle={{ color: 'green' }}\n                                style={{ color: 'green' }}\n                            />\n                        Personal</div>\n                        <div >\n                            <Checkbox checked={taskTypeCheck[1]}\n                                onClick={() => { setTaskTypeCheck([false, true, false]); setTaskType(\"Official\") }}\n\n                                // labelStyle={{ color: 'green' }}\n                                // iconStyle={{ fill: 'green' }}\n                                // inputStyle={{ color: 'green' }}\n                                style={{ color: 'green' }}\n                            />\n                        Official\n                </div>\n                        <div >\n                            <Checkbox checked={taskTypeCheck[2]}\n                                onClick={() => { setTaskTypeCheck([false, false, true]); setTaskType(\"Miscellaneous\") }}\n                                // labelStyle={{ color: 'green' }}\n                                // iconStyle={{ fill: 'green' }}\n                                // inputStyle={{ color: 'green' }}\n                                style={{ color: 'green' }}\n                            />\n                        Miscellaneous\n                </div>\n                    </div>\n                    <div className=\"ui hidden divider\"></div>\n\n                    <StaticDatePicker taskDate={taskDate} setTaskDate={setTaskDate}\n                    // onDateChanged={()=>{console.log(\"date changed\");}}\n                    />\n                    <div className=\"ui hidden divider\"></div>\n                </div>\n                {SubTaskList()}\n\n            </div>\n            <div className=\"ui hidden divider\"></div>\n            <div className=\"buttons-container\">\n                <button style={{ margin: \"1rem\" }} className=\"ui button\">Cancel</button>\n                <button onClick={handleEditTask} className=\"ui green button\">Create</button>\n            </div>\n            {/* <SnackBar setIsOpenSnackbar={setIsOpenSnackbar}/> */}\n            {isOpenSnackbar ? <SnackBar disableError={disableError} isError={false} isOpenSnackbar={isOpenSnackbar} /> : null}\n            {errorSnackBar ? <SnackBar disableError={disableError} isError={true} isOpenSnackbar={errorSnackBar} /> : null}\n        </div>\n    </MuiPickersUtilsProvider>\n    );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps,updateTaskList)(EditTask);","import React from 'react';\nimport { connect } from 'react-redux';\nimport './Analytics.scss'\n\nimport ScreenHeader from '../widgets/ScreenHeader'\n\nconst Analytics = (props) => {\n    \n    return (\n        <div className=\"analytics\">\n            <ScreenHeader screenName=\"Analytics\" />\n            <h3> Analytics IS SHOWN ============1</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            \n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps)(Analytics);","import React from 'react';\nimport '../SideBar/SideBar.scss'\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { logout } from '../../actions';\n\n\nconst SideBar = (props) =>{\n    let history = useHistory();\n\n    const handleLogout = () =>{\n        props.logout()\n        history.push('/');\n    }\n    \n    return(\n    <div className=\"side-bar\">\n        <div className=\"side-bar-content\">\n            <div>item</div>\n            <div>item</div>\n            <div onClick={handleLogout}>item</div>\n        \n        </div>\n    </div>\n);\n} \n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\nexport default connect(mapStateToProps, { logout })(SideBar);","import React from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux'\nimport { HashRouter, Route } from 'react-router-dom'\n\nimport LoginPage from '../LoginPage';\nimport DashBoard from '../Dashboard';\nimport CreateTask from '../CreateTask';\nimport EditTask from '../EditTask';\nimport Analytics from '../Analytics';\nimport SideBar from '../SideBar'\n\nclass App extends React.Component {\n\n    renderMainPage = () => {\n        if (this.props.state.login.token === undefined) {\n            return <LoginPage />;\n        }\n        else {\n            return <DashBoard />;\n        }\n    }\n\n    render() {\n        return (\n            <HashRouter>\n                <div className=\"App\">\n                {this.props.state.login.token !== undefined && <SideBar/>}\n                <Route path=\"/\" exact component={this.renderMainPage} />\n                <Route path=\"/createtask\" exact component={CreateTask} />\n                <Route path=\"/edittask\" exact component={EditTask} />\n                <Route path=\"/analytics\" exact component={Analytics} />\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps)(App);","import {combineReducers} from 'redux';\n\nimport loginReducer from './loginReducer';\nimport taskReducer from './taskReducer';\n\nexport default combineReducers({\n    login: loginReducer,\n    tasks:taskReducer,\n});","/* eslint-disable import/no-anonymous-default-export */\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case 'USER_LOGIN':\n            return action.payload;\n         case 'USER_LOGOUT':\n            return {};\n        default:\n            return state;\n    }\n};","// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = [], action) => {\n    switch (action.type) {\n        case 'CREATE_TASK':\n            return [...state, action.payload];\n        case 'UPDATE_TASKS':\n            console.log(\"update task reducer\");\n            return action.payload;\n        case 'USER_LOGOUT':\n            return [];\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport { Provider } from 'react-redux';\nimport { createStore,applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist' // imports from redux-persist\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport reducers from './reducers'\n\nconst persistConfig = { // configuration object for redux-persist\n    key: 'root',\n    storage, // define which storage to use\n}\nconst persistedReducer = persistReducer(persistConfig, reducers) // create a persisted reducer\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(persistedReducer,\n    composeEnhancers(applyMiddleware(thunk))\n    );\n\nconst  persistor = persistStore(store); // used to create the persisted store, persistor will be used in the next step\n\nReactDOM.render(\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n    <App />\n\n    </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}