{"version":3,"sources":["components/LoginPage/LoginSectionOne/logo.png","components/LoginPage/LoginSectionOne/index.js","apis/reqres.js","components/LoginPage/LoginSectionTwo/index.js","actions/index.js","components/LoginPage/index.js","components/Dashboard/index.js","components/CreateTask/index.js","components/EditTask/index.js","components/Analytics/index.js","components/SideBar/index.js","components/App/index.js","reducers/index.js","reducers/loginReducer.js","reducers/taskReducer.js","index.js"],"names":["LoginSectionOne","className","src","logo","alt","axios","create","baseURL","LoginSectionTwo","props","passwordRef","React","createRef","passwordTypeRef","handleEyeClick","currentType","current","type","handleChangeEmail","event","setState","email","target","value","emailRef","classList","remove","handleChangePassword","password","handleSubmit","preventDefault","state","login","add","onSubmit","this","ref","placeholder","onChange","onClick","class","Component","connect","dispatch","getstate","a","reqres","post","response","payload","token","data","LoginPage","logout","history","useHistory","to","push","console","log","createTask","taskName","description","tag","branchTo","date","subTask","SideBar","App","renderMainPage","undefined","path","exact","component","CreateTask","EditTask","Analytics","combineReducers","action","tasks","persistConfig","key","storage","persistedReducer","persistReducer","reducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"iZAAe,G,YAAA,IAA0B,kCCe1BA,EAZS,WACpB,OACI,sBAAKC,UAAU,YAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,qBAAMC,IAAKC,EAAMC,IAAI,SACrB,8BAAG,4CAAH,WAEJ,iD,yCCRGC,E,OAAAA,EAAMC,OAAO,CAC5BC,QAAQ,0BCEFC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,YAAcC,IAAMC,YATD,EAUnBC,gBAAkBF,IAAMC,YAVL,EAYnBE,eAAiB,WACb,IAAIC,EAAc,EAAKF,gBAAgBG,QAAQC,KAE3C,EAAKJ,gBAAgBG,QAAQC,KADhB,aAAdF,EACmC,OAGE,YAlBzB,EAsBnBG,kBAAoB,SAACC,GACjB,EAAKC,SAAS,CAAEC,MAAOF,EAAMG,OAAOC,QACpC,EAAKC,SAASR,QAAQS,UAAUC,OAAO,UAxBxB,EA2BnBC,qBAAuB,SAACR,GACpB,EAAKC,SAAS,CAAEQ,SAAUT,EAAMG,OAAOC,QACvC,EAAKb,YAAYM,QAAQS,UAAUC,OAAO,UA7B3B,EAgCnBG,aAAe,SAACV,GACZA,EAAMW,iBACmB,KAArB,EAAKC,MAAMV,OAAwC,KAAxB,EAAKU,MAAMH,SACtC,EAAKnB,MAAMuB,MAAM,EAAKD,MAAMV,QAGH,KAArB,EAAKU,MAAMV,OACX,EAAKG,SAASR,QAAQS,UAAUQ,IAAI,SAGZ,KAAxB,EAAKF,MAAMH,UACX,EAAKlB,YAAYM,QAAQS,UAAUQ,IAAI,WAzC/C,EAAKT,SAAWb,IAAMC,YACtB,EAAKmB,MAAQ,CACTV,MAAO,GACPO,SAAU,IALC,E,qDAiDf,OACI,qBAAK3B,UAAU,YAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,2CACA,uBAAMA,UAAU,UAAUiC,SAAUC,KAAKN,aAAzC,UACI,sBAAKO,IAAKD,KAAKX,SAAUvB,UAAU,2BAAnC,UACI,uBAAOgB,KAAK,QACRM,MAAOY,KAAKJ,MAAMV,MAClBgB,YAAa,WACbC,SAAUH,KAAKjB,oBACnB,mBAAGjB,UAAU,6BAEjB,sBAAKmC,IAAKD,KAAKzB,YAAaT,UAAU,2BAAtC,UACI,uBAAOmC,IAAKD,KAAKtB,gBACbI,KAAK,WACLM,MAAOY,KAAKJ,MAAMH,SAClBS,YAAa,WACbC,SAAUH,KAAKR,uBACnB,mBAAG1B,UAAU,cACb,qBAAKsC,QAASJ,KAAKrB,eAAgB0B,MAAM,gBAAzC,SACI,mBAAGA,MAAM,uBAGjB,wBAAQvC,UAAU,wBAAwBgB,KAAK,SAASM,MAAM,SAA9D,gC,GAzEMZ,IAAM8B,WAgFrBC,cAAQ,KAAM,CAAEV,MCnFV,SAACX,GAAD,8CAAW,WAAOsB,EAAUC,GAAjB,eAAAC,EAAA,sEACLC,EAAOC,KAAK,SAAU,CAAE1B,MAAO,qBAAsBO,SAAU,eAD1D,OACtBoB,EADsB,OAE5BL,EAAS,CACL1B,KAAM,aACNgC,QAAS,CACLC,MAAOF,EAASG,KAChB9B,MAAQA,KANY,2CAAX,0DDmFNqB,CAAyBlC,GEpEzB4C,E,uKAVP,OACI,qBAAKnD,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,a,GAPIU,IAAM8B,WCiCfC,G,MAAAA,aAHS,SAACX,GACrB,MAAO,CAACA,MAAMA,KAEqB,CAACsB,OFvBlB,WAClB,MAAO,CACHpC,KAAM,iBEqBCyB,EA/BG,SAACjC,GACf,IAAI6C,EAAUC,cAed,OACI,sBAAKtD,UAAU,YAAf,sBAEI,cAAC,IAAD,CAAMuD,GAAG,sBAAT,SAA+B,+CAC/B,wBAAQjB,QAlBe,WAC3Be,EAAQG,KAAK,wBAiBT,8BACA,wBAAQlB,QAhBa,WACzBe,EAAQG,KAAK,sBAeT,4BACA,wBAAQlB,QAde,WAC3Be,EAAQG,KAAK,uBAaT,4BACA,wBAAQlB,QAXK,WACjBmB,QAAQC,IAAI,iBACZlD,EAAM4C,UASF,2BC6CGX,G,MAAAA,aAJS,SAACX,GACrB,MAAO,CAAEA,MAAOA,KAGoB,CAAE6B,WHrDhB,SAACC,EAAUC,EAAaC,EAAKC,EAAUC,EAAMC,GACnE,MAAO,CACHjD,KAAM,cACNgC,QAAS,CACLY,WACAC,cACAC,MACAC,WACAC,OACAC,QAAS,CAACA,OG4CPxB,EArEI,SAACjC,GAIhB,OACI,sBAAKR,UAAU,cAAf,UACI,wBAAQsC,QALS,WACrB9B,EAAMmD,WAAW,YAAY,YAAY,WAAW,cAAgB,YAAc,iBAI9E,0BACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,6CACA,oDCvBGlB,G,MAAAA,aAJS,SAACX,GACrB,MAAO,CAAEA,MAAOA,KAGLW,EAtCE,SAACjC,GAId,OACI,sBAAKR,UAAU,YAAf,UACI,wBAAQsC,QALO,WACnBmB,QAAQC,IAAI,aAIR,wBACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,2CACA,kDCkCGjB,G,MAAAA,aAJS,SAACX,GACrB,MAAO,CAAEA,MAAOA,KAGLW,EA9DG,SAACjC,GAEf,OACI,sBAAKR,UAAU,YAAf,UAEI,mEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,kEACA,yECxCGkE,G,MAbC,SAAC1D,GACjB,OACI,qBAAKR,UAAU,WAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,uCACA,uCACA,8CCGNmE,E,4MAEFC,eAAiB,WACb,YAAqCC,IAAjC,EAAK7D,MAAMsB,MAAMC,MAAMkB,MAChB,cAAC,EAAD,IAGA,cAAC,EAAD,K,uDAKX,OACI,cAAC,IAAD,UACI,sBAAKjD,UAAU,MAAf,eACkCqE,IAAjCnC,KAAK1B,MAAMsB,MAAMC,MAAMkB,OAAuB,cAAC,EAAD,IAC/C,cAAC,IAAD,CAAOqB,KAAK,WAAWC,OAAK,EAACC,UAAWtC,KAAKkC,iBAC7C,cAAC,IAAD,CAAOE,KAAK,sBAAsBC,OAAK,EAACC,UAAWC,IACnD,cAAC,IAAD,CAAOH,KAAK,oBAAoBC,OAAK,EAACC,UAAWE,IACjD,cAAC,IAAD,CAAOJ,KAAK,qBAAqBC,OAAK,EAACC,UAAWG,a,GAnBhDjE,IAAM8B,WA8BTC,eAJS,SAACX,GACrB,MAAO,CAAEA,MAAOA,KAGLW,CAAyB0B,G,wDCrCzBS,cAAgB,CAC3B7C,MCLW,WAAyB,IAAxBD,EAAuB,uDAAf,GAAI+C,EAAW,uCACnC,OAAQA,EAAO7D,MACX,IAAK,aACD,OAAO6D,EAAO7B,QACjB,IAAK,cACF,MAAO,GACX,QACI,OAAOlB,IDDfgD,MENW,WAAyB,IAAxBhD,EAAuB,uDAAf,GAAI+C,EAAW,uCACnC,OAAQA,EAAO7D,MACX,IAAK,cACD,MAAM,GAAN,mBAAWc,GAAX,CAAkB+C,EAAO7B,UAE7B,IAAK,cACD,MAAO,GACX,QACI,OAAOlB,MCIbiD,EAAgB,CAClBC,IAAK,OACLC,aAEEC,EAAmBC,YAAeJ,EAAeK,GAEjDC,EAAmBC,OAAOC,sCAAwCC,IAElEC,EAAQC,YAAYR,EACtBG,EAAiBM,YAAgBC,OAG9BC,EAAYC,YAAaL,GAEhCM,IAASC,OACL,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACA,cAAC,IAAD,CAAaQ,QAAS,KAAMJ,UAAWA,EAAvC,SACA,cAAC,EAAD,QAIAK,SAASC,eAAe,W","file":"static/js/main.501e8abd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.24a3167d.png\";","import React from 'react-dom';\nimport './LoginSectionOne.scss';\nimport logo from './logo.png';\nconst LoginSectionOne = () => {\n    return (\n        <div className=\"section-1\">\n            <div className=\"logo-container\" >\n                <img  src={logo} alt=\"Logo\" />\n                <p><strong>switch</strong>on</p>\n            </div>\n            <h3>Assignments</h3>\n        </div>\n    );\n}\n\nexport default LoginSectionOne;","import axios from 'axios';\n\nexport default axios.create({\nbaseURL:'https://reqres.in/api'\n});","import React from 'react';\nimport './LoginSectionTwo.scss';\n\nimport { connect } from 'react-redux';\nimport { login } from '../../../actions';\nclass LoginSectionTwo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.emailRef = React.createRef();\n        this.state = {\n            email: '',\n            password: ''\n        };\n    }\n\n    passwordRef = React.createRef();\n    passwordTypeRef = React.createRef();\n\n    handleEyeClick = () =>{\n        var currentType = this.passwordTypeRef.current.type;\n        if(currentType==='password'){\n            this.passwordTypeRef.current.type='text'\n        }\n        else{\n            this.passwordTypeRef.current.type = 'password'\n        }\n        \n    }\n    handleChangeEmail = (event) => {\n        this.setState({ email: event.target.value });\n        this.emailRef.current.classList.remove('error');\n\n    }\n    handleChangePassword = (event) => {\n        this.setState({ password: event.target.value });\n        this.passwordRef.current.classList.remove('error');\n\n    }\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.email !== '' && this.state.password !== '') {\n            this.props.login(this.state.email);\n        }\n        else {\n            if (this.state.email === '') {\n                this.emailRef.current.classList.add('error');\n            }\n\n            if (this.state.password === '') {\n                this.passwordRef.current.classList.add('error');\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"section-2\">\n                <div className=\"login-container\">\n                    <h1>To-Do App</h1>\n                    <form className=\"ui form\" onSubmit={this.handleSubmit}>\n                        <div ref={this.emailRef} className=\"ui field left icon input\">\n                            <input type=\"email\" \n                                value={this.state.email} \n                                placeholder={\"Email ID\"} \n                                onChange={this.handleChangeEmail} />\n                            <i className=\"envelope outline icon\"></i>\n                        </div>\n                        <div ref={this.passwordRef} className=\"ui field left icon input\">\n                            <input ref={this.passwordTypeRef} \n                                type=\"password\" \n                                value={this.state.password} \n                                placeholder={\"Password\"} \n                                onChange={this.handleChangePassword} />\n                            <i className=\"lock icon\"></i>\n                            <div onClick={this.handleEyeClick} class=\"ui icon input\">\n                                <i class=\"eye link icon\"></i>\n                            </div>\n                        </div>\n                        <button className=\"ui field green button\" type=\"submit\" value=\"Submit\" > Login</button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\nexport default connect(null, { login })(LoginSectionTwo);","import reqres from '../apis/reqres'\n\nexport const login = (email) => async (dispatch, getstate) => {\n    const response = await reqres.post('/login', { email: \"eve.holt@reqres.in\", password: \"cityslicka\" });\n    dispatch({\n        type: 'USER_LOGIN',\n        payload: {\n            token: response.data,\n            email : email\n        }\n    });\n}\n\n\nexport const logout = () => {\n    return {\n        type: 'USER_LOGOUT',\n    }\n}\n\n\nexport const createTask = (taskName, description, tag, branchTo, date, subTask) => {\n    return {\n        type: 'CREATE_TASK',\n        payload: {\n            taskName,\n            description,\n            tag,\n            branchTo,\n            date,\n            subTask: [subTask]\n        }\n    }\n}","import React from 'react';\nimport './LoginPage.scss';\nimport LoginSectionOne from './LoginSectionOne';\nimport LoginSectionTwo from './LoginSectionTwo';\nclass LoginPage extends React.Component {\n\n    render() {\n        return (\n            <div className=\"LoginPage\">\n                <div className=\"container\">\n                    <LoginSectionOne />\n                    <LoginSectionTwo/>\n                </div>\n            </div>\n        );\n    }\n}\nexport default LoginPage;","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link,useHistory} from 'react-router-dom';\nimport '../Dashboard/Dashboard.scss';\nimport {logout} from '../../actions'\n\nconst DashBoard = (props) =>{\n    let history = useHistory();\n    const handleCreateTaskButton = () =>{\n        history.push('/todoapp/createtask');\n    }\n    const handleEditTaskButton = () =>{\n        history.push('/todoapp/edittask');\n    }\n    const handleAnalyticskButton = () =>{\n        history.push('/todoapp/analytics');\n    }\n    \n    const handleLogout = () =>{\n        console.log('handle logout');\n        props.logout();\n    }\n    return(\n        <div className=\"dashboard\">\n            Dashboard\n            <Link to=\"/todoapp/createtask\"><h3>create task</h3></Link>\n            <button onClick={handleCreateTaskButton}>goto create task</button>\n            <button onClick={handleEditTaskButton}>goto Edit task</button>\n            <button onClick={handleAnalyticskButton}>goto analytics</button>\n            <button onClick={handleLogout}>logout</button>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) =>{\n    return {state:state}\n}\nexport default connect(mapStateToProps,{logout})(DashBoard);","import React from 'react';\nimport { connect } from 'react-redux';\nimport './CreateTask.scss'\nimport { createTask } from '../../actions/index'\n\nconst CreateTask = (props) => {\n    const handleCreateTask = () => {\n        props.createTask('temp task','temp desc','temp tag','temp branch' , 'temp date' , 'temp subtask');\n    }\n    return (\n        <div className=\"create-task\">\n            <button onClick={handleCreateTask}> create task</button>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n            <h3>create task</h3>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps, { createTask })(CreateTask);","import React from 'react';\nimport { connect } from 'react-redux';\nimport './EditTask.scss'\n\nconst EditTask = (props) => {\n    const handleEditTask = () => {\n        console.log('editTask');\n    }\n    return (\n        <div className=\"edit-task\">\n            <button onClick={handleEditTask}> edit task</button>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n            <h3>Edit task</h3>\n\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps)(EditTask);","import React from 'react';\nimport { connect } from 'react-redux';\nimport './Analytics.scss'\n\nconst Analytics = (props) => {\n    \n    return (\n        <div className=\"analytics\">\n            \n            <h3> Analytics IS SHOWN ============1</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            <h3> Analytics IS SHOWN ============</h3>\n            \n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps)(Analytics);","import React from 'react';\nimport '../SideBar/SideBar.scss'\n\nconst SideBar = (props) =>{\nreturn(\n    <div className=\"side-bar\">\n        <div className=\"side-bar-content\">\n            <div>item</div>\n            <div>item</div>\n            <div>item</div>\n        \n        </div>\n    </div>\n);\n} \n\nexport default SideBar;","import React from 'react';\nimport './App.scss';\nimport { connect } from 'react-redux'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport LoginPage from '../LoginPage';\nimport DashBoard from '../Dashboard';\nimport CreateTask from '../CreateTask';\nimport EditTask from '../EditTask';\nimport Analytics from '../Analytics';\nimport SideBar from '../SideBar'\n\nclass App extends React.Component {\n\n    renderMainPage = () => {\n        if (this.props.state.login.token === undefined) {\n            return <LoginPage />;\n        }\n        else {\n            return <DashBoard />;\n        }\n    }\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"App\">\n                {this.props.state.login.token !== undefined && <SideBar/>}\n                <Route path=\"/todoapp\" exact component={this.renderMainPage} />\n                <Route path=\"/todoapp/createtask\" exact component={CreateTask} />\n                <Route path=\"/todoapp/edittask\" exact component={EditTask} />\n                <Route path=\"/todoapp/analytics\" exact component={Analytics} />\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { state: state }\n}\n\nexport default connect(mapStateToProps)(App);","import {combineReducers} from 'redux';\n\nimport loginReducer from './loginReducer';\nimport taskReducer from './taskReducer';\n\nexport default combineReducers({\n    login: loginReducer,\n    tasks:taskReducer\n});","/* eslint-disable import/no-anonymous-default-export */\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case 'USER_LOGIN':\n            return action.payload;\n         case 'USER_LOGOUT':\n            return {};\n        default:\n            return state;\n    }\n};","// eslint-disable-next-line import/no-anonymous-default-export\nexport default (state = [], action) => {\n    switch (action.type) {\n        case 'CREATE_TASK':\n            return [...state, action.payload];\n\n        case 'USER_LOGOUT':\n            return [];\n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App'\nimport { Provider } from 'react-redux';\nimport { createStore,applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist' // imports from redux-persist\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport reducers from './reducers'\n\nconst persistConfig = { // configuration object for redux-persist\n    key: 'root',\n    storage, // define which storage to use\n}\nconst persistedReducer = persistReducer(persistConfig, reducers) // create a persisted reducer\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(persistedReducer,\n    composeEnhancers(applyMiddleware(thunk))\n    );\n\nconst  persistor = persistStore(store); // used to create the persisted store, persistor will be used in the next step\n\nReactDOM.render(\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n    <App />\n\n    </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}